This file is a merged representation of the entire codebase, combined into a single document by Repomix.

<file_summary>
This section contains a summary of this file.

<purpose>
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.
</purpose>

<file_format>
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Repository files (if enabled)
4. Repository files, each consisting of:
  - File path as an attribute
  - Full contents of the file
</file_format>

<usage_guidelines>
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.
</usage_guidelines>

<notes>
- Some files may have been excluded based on .gitignore rules and Repomix's configuration
- Binary files are not included in this packed representation. Please refer to the Repository Structure section for a complete list of file paths, including binary files
- Files matching patterns in .gitignore are excluded
- Files matching default ignore patterns are excluded
- Files are sorted by Git change count (files with more changes are at the bottom)
</notes>

<additional_info>

</additional_info>

</file_summary>

<directory_structure>
.cursor/
  rules/
    errors.mdc
.github/
  workflows/
    deploy.yml
public/
  .nojekyll
  celestial-gear.svg
  file.svg
  globe.svg
  next.svg
  vercel.svg
  window.svg
src/
  app/
    about/
      page.tsx
    projects/
      page.tsx
    skills/
      page.tsx
    globals.css
    layout.tsx
    page.tsx
  components/
    ui/
      button.tsx
      card.tsx
      dialog.tsx
      dropdown-menu.tsx
      input.tsx
      progress.tsx
      sheet.tsx
      textarea.tsx
    AvailabilitySection.tsx
    BrandHero.tsx
    ContactDialog.tsx
    ExpertiseGrid.tsx
    Footer.tsx
    main-nav.tsx
    ScrollAnimation.tsx
    ScrollButton.tsx
    Testimonials.tsx
  lib/
    utils.ts
.browserslistrc
.gitignore
components.json
eslint.config.mjs
next.config.js
package.json
postcss.config.mjs
README.md
tailwind.config.mjs
tsconfig.json
</directory_structure>

<files>
This section contains the contents of the repository's files.

<file path=".cursor/rules/errors.mdc">
---
description: 
globs: 
alwaysApply: true
---
check for build errors and errors in general at the end of every request
</file>

<file path="public/.nojekyll">

</file>

<file path="public/celestial-gear.svg">
<svg width="64" height="64" viewBox="0 0 64 64" fill="none" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <linearGradient id="celestialGearMainGradient" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" style="stop-color:#4A00E0; stop-opacity:1" /> <stop offset="100%" style="stop-color:#8E2DE2; stop-opacity:1" /> </linearGradient>
  </defs>

  <rect width="64" height="64" rx="12" fill="url(#celestialGearMainGradient)"/>

  <circle cx="32" cy="32" r="14" fill="#D2B48C"/> <!-- Tan color for gear body -->
  
  <g transform="translate(32,32)">
    <rect x="-4" y="-19" width="8" height="10" rx="2" fill="#D2B48C" transform="rotate(0)"/>
    <rect x="-4" y="-19" width="8" height="10" rx="2" fill="#D2B48C" transform="rotate(60)"/>
    <rect x="-4" y="-19" width="8" height="10" rx="2" fill="#D2B48C" transform="rotate(120)"/>
    <rect x="-4" y="-19" width="8" height="10" rx="2" fill="#D2B48C" transform="rotate(180)"/>
    <rect x="-4" y="-19" width="8" height="10" rx="2" fill="#D2B48C" transform="rotate(240)"/>
    <rect x="-4" y="-19" width="8" height="10" rx="2" fill="#D2B48C" transform="rotate(300)"/>
  </g>
  
  <circle cx="32" cy="32" r="7" fill="url(#celestialGearMainGradient)" stroke="#B08D57" stroke-width="1.5"/> <!-- Darker tan for border -->

  <path d="M46 14 Q48 16 46 18 Q44 16 46 14 Z" fill="#AFEEEE" opacity="0.9"/> <!-- Pale Turquoise spark -->
  <circle cx="17" cy="49" r="1.8" fill="#FFFFFF" opacity="0.75"/> <!-- White star -->
</svg>
</file>

<file path="public/file.svg">
<svg fill="none" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg"><path d="M14.5 13.5V5.41a1 1 0 0 0-.3-.7L9.8.29A1 1 0 0 0 9.08 0H1.5v13.5A2.5 2.5 0 0 0 4 16h8a2.5 2.5 0 0 0 2.5-2.5m-1.5 0v-7H8v-5H3v12a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1M9.5 5V2.12L12.38 5zM5.13 5h-.62v1.25h2.12V5zm-.62 3h7.12v1.25H4.5zm.62 3h-.62v1.25h7.12V11z" clip-rule="evenodd" fill="#666" fill-rule="evenodd"/></svg>
</file>

<file path="public/globe.svg">
<svg fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><g clip-path="url(#a)"><path fill-rule="evenodd" clip-rule="evenodd" d="M10.27 14.1a6.5 6.5 0 0 0 3.67-3.45q-1.24.21-2.7.34-.31 1.83-.97 3.1M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16m.48-1.52a7 7 0 0 1-.96 0H7.5a4 4 0 0 1-.84-1.32q-.38-.89-.63-2.08a40 40 0 0 0 3.92 0q-.25 1.2-.63 2.08a4 4 0 0 1-.84 1.31zm2.94-4.76q1.66-.15 2.95-.43a7 7 0 0 0 0-2.58q-1.3-.27-2.95-.43a18 18 0 0 1 0 3.44m-1.27-3.54a17 17 0 0 1 0 3.64 39 39 0 0 1-4.3 0 17 17 0 0 1 0-3.64 39 39 0 0 1 4.3 0m1.1-1.17q1.45.13 2.69.34a6.5 6.5 0 0 0-3.67-3.44q.65 1.26.98 3.1M8.48 1.5l.01.02q.41.37.84 1.31.38.89.63 2.08a40 40 0 0 0-3.92 0q.25-1.2.63-2.08a4 4 0 0 1 .85-1.32 7 7 0 0 1 .96 0m-2.75.4a6.5 6.5 0 0 0-3.67 3.44 29 29 0 0 1 2.7-.34q.31-1.83.97-3.1M4.58 6.28q-1.66.16-2.95.43a7 7 0 0 0 0 2.58q1.3.27 2.95.43a18 18 0 0 1 0-3.44m.17 4.71q-1.45-.12-2.69-.34a6.5 6.5 0 0 0 3.67 3.44q-.65-1.27-.98-3.1" fill="#666"/></g><defs><clipPath id="a"><path fill="#fff" d="M0 0h16v16H0z"/></clipPath></defs></svg>
</file>

<file path="public/next.svg">
<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 394 80"><path fill="#000" d="M262 0h68.5v12.7h-27.2v66.6h-13.6V12.7H262V0ZM149 0v12.7H94v20.4h44.3v12.6H94v21h55v12.6H80.5V0h68.7zm34.3 0h-17.8l63.8 79.4h17.9l-32-39.7 32-39.6h-17.9l-23 28.6-23-28.6zm18.3 56.7-9-11-27.1 33.7h17.8l18.3-22.7z"/><path fill="#000" d="M81 79.3 17 0H0v79.3h13.6V17l50.2 62.3H81Zm252.6-.4c-1 0-1.8-.4-2.5-1s-1.1-1.6-1.1-2.6.3-1.8 1-2.5 1.6-1 2.6-1 1.8.3 2.5 1a3.4 3.4 0 0 1 .6 4.3 3.7 3.7 0 0 1-3 1.8zm23.2-33.5h6v23.3c0 2.1-.4 4-1.3 5.5a9.1 9.1 0 0 1-3.8 3.5c-1.6.8-3.5 1.3-5.7 1.3-2 0-3.7-.4-5.3-1s-2.8-1.8-3.7-3.2c-.9-1.3-1.4-3-1.4-5h6c.1.8.3 1.6.7 2.2s1 1.2 1.6 1.5c.7.4 1.5.5 2.4.5 1 0 1.8-.2 2.4-.6a4 4 0 0 0 1.6-1.8c.3-.8.5-1.8.5-3V45.5zm30.9 9.1a4.4 4.4 0 0 0-2-3.3 7.5 7.5 0 0 0-4.3-1.1c-1.3 0-2.4.2-3.3.5-.9.4-1.6 1-2 1.6a3.5 3.5 0 0 0-.3 4c.3.5.7.9 1.3 1.2l1.8 1 2 .5 3.2.8c1.3.3 2.5.7 3.7 1.2a13 13 0 0 1 3.2 1.8 8.1 8.1 0 0 1 3 6.5c0 2-.5 3.7-1.5 5.1a10 10 0 0 1-4.4 3.5c-1.8.8-4.1 1.2-6.8 1.2-2.6 0-4.9-.4-6.8-1.2-2-.8-3.4-2-4.5-3.5a10 10 0 0 1-1.7-5.6h6a5 5 0 0 0 3.5 4.6c1 .4 2.2.6 3.4.6 1.3 0 2.5-.2 3.5-.6 1-.4 1.8-1 2.4-1.7a4 4 0 0 0 .8-2.4c0-.9-.2-1.6-.7-2.2a11 11 0 0 0-2.1-1.4l-3.2-1-3.8-1c-2.8-.7-5-1.7-6.6-3.2a7.2 7.2 0 0 1-2.4-5.7 8 8 0 0 1 1.7-5 10 10 0 0 1 4.3-3.5c2-.8 4-1.2 6.4-1.2 2.3 0 4.4.4 6.2 1.2 1.8.8 3.2 2 4.3 3.4 1 1.4 1.5 3 1.5 5h-5.8z"/></svg>
</file>

<file path="public/vercel.svg">
<svg fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1155 1000"><path d="m577.3 0 577.4 1000H0z" fill="#fff"/></svg>
</file>

<file path="public/window.svg">
<svg fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path fill-rule="evenodd" clip-rule="evenodd" d="M1.5 2.5h13v10a1 1 0 0 1-1 1h-11a1 1 0 0 1-1-1zM0 1h16v11.5a2.5 2.5 0 0 1-2.5 2.5h-11A2.5 2.5 0 0 1 0 12.5zm3.75 4.5a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5M7 4.75a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0m1.75.75a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5" fill="#666"/></svg>
</file>

<file path="src/app/skills/page.tsx">
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Progress } from "@/components/ui/progress";
import { Code2, Database, Layout, Server, Settings, Terminal } from "lucide-react";

export default function SkillsPage() {
  const skillCategories = [
    {
      title: "Frontend Development",
      icon: Layout,
      description: "Building beautiful and responsive user interfaces",
      skills: [
        { name: "React/Next.js", level: 95 },
        { name: "TypeScript", level: 90 },
        { name: "HTML/CSS", level: 95 },
        { name: "Tailwind CSS", level: 90 },
        { name: "Redux/State Management", level: 85 }
      ]
    },
    {
      title: "Backend Development",
      icon: Server,
      description: "Creating robust and scalable server applications",
      skills: [
        { name: "Node.js", level: 90 },
        { name: "Express.js", level: 85 },
        { name: "RESTful APIs", level: 90 },
        { name: "GraphQL", level: 80 },
        { name: "Authentication/Security", level: 85 }
      ]
    },
    {
      title: "Database Management",
      icon: Database,
      description: "Working with various database systems",
      skills: [
        { name: "PostgreSQL", level: 85 },
        { name: "MongoDB", level: 90 },
        { name: "Redis", level: 75 },
        { name: "Database Design", level: 85 },
        { name: "Data Modeling", level: 80 }
      ]
    },
    {
      title: "DevOps & Tools",
      icon: Settings,
      description: "Managing deployment and development workflows",
      skills: [
        { name: "Git/GitHub", level: 90 },
        { name: "Docker", level: 80 },
        { name: "CI/CD", level: 85 },
        { name: "AWS Services", level: 80 },
        { name: "Linux/Shell Scripting", level: 75 }
      ]
    }
  ];

  return (
    <div className="min-h-screen bg-background pt-32">
      <div className="container mx-auto px-4">
        <div className="max-w-5xl mx-auto space-y-16">
          {/* Header */}
          <div className="space-y-4">
            <h1 className="text-4xl font-bold">Skills & Expertise</h1>
            <p className="text-lg text-medium-contrast max-w-2xl">
              With over 5 years of experience in full stack development, I've developed a comprehensive 
              skill set across various technologies and tools.
            </p>
          </div>

          {/* Skills Grid */}
          <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
            {skillCategories.map((category, index) => (
              <Card key={index}>
                <CardHeader>
                  <div className="flex items-center gap-2">
                    <category.icon className="h-6 w-6 text-primary" />
                    <CardTitle>{category.title}</CardTitle>
                  </div>
                  <CardDescription>{category.description}</CardDescription>
                </CardHeader>
                <CardContent>
                  <div className="space-y-6">
                    {category.skills.map((skill, skillIndex) => (
                      <div key={skillIndex} className="space-y-2">
                        <div className="flex justify-between items-center">
                          <span className="text-sm font-medium">{skill.name}</span>
                          <span className="text-sm text-muted-foreground">{skill.level}%</span>
                        </div>
                        <Progress value={skill.level} className="h-2" />
                      </div>
                    ))}
                  </div>
                </CardContent>
              </Card>
            ))}
          </div>

          {/* Additional Skills */}
          <div className="space-y-8">
            <h2 className="text-2xl font-semibold">Additional Skills</h2>
            <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
              {[
                "Jest/Testing",
                "Agile/Scrum",
                "UI/UX Design",
                "Performance Optimization",
                "SEO",
                "Web Accessibility",
                "Technical Writing",
                "Team Leadership"
              ].map((skill, index) => (
                <div
                  key={index}
                  className="p-4 rounded-lg border bg-card text-card-foreground shadow-sm text-center"
                >
                  {skill}
                </div>
              ))}
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}
</file>

<file path="src/components/ui/dialog.tsx">
"use client"

import * as React from "react"
import * as DialogPrimitive from "@radix-ui/react-dialog"
import { X } from "lucide-react"

import { cn } from "@/lib/utils"

const Dialog = DialogPrimitive.Root

const DialogTrigger = DialogPrimitive.Trigger

const DialogPortal = DialogPrimitive.Portal

const DialogClose = DialogPrimitive.Close

const DialogOverlay = React.forwardRef<
  React.ElementRef<typeof DialogPrimitive.Overlay>,
  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>
>(({ className, ...props }, ref) => (
  <DialogPrimitive.Overlay
    ref={ref}
    className={cn(
      "fixed inset-0 z-50 bg-black/80 backdrop-blur-sm data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",
      className
    )}
    {...props}
  />
))
DialogOverlay.displayName = DialogPrimitive.Overlay.displayName

const DialogContent = React.forwardRef<
  React.ElementRef<typeof DialogPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>
>(({ className, children, ...props }, ref) => (
  <DialogPortal>
    <DialogOverlay />
    <DialogPrimitive.Content
      ref={ref}
      className={cn(
        "fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg",
        className
      )}
      {...props}
    >
      {children}
      <DialogPrimitive.Close className="absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground">
        <X className="h-4 w-4" />
        <span className="sr-only">Close</span>
      </DialogPrimitive.Close>
    </DialogPrimitive.Content>
  </DialogPortal>
))
DialogContent.displayName = DialogPrimitive.Content.displayName

const DialogHeader = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLDivElement>) => (
  <div
    className={cn(
      "flex flex-col space-y-1.5 text-center sm:text-left",
      className
    )}
    {...props}
  />
)
DialogHeader.displayName = "DialogHeader"

const DialogFooter = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLDivElement>) => (
  <div
    className={cn(
      "flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2",
      className
    )}
    {...props}
  />
)
DialogFooter.displayName = "DialogFooter"

const DialogTitle = React.forwardRef<
  React.ElementRef<typeof DialogPrimitive.Title>,
  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>
>(({ className, ...props }, ref) => (
  <DialogPrimitive.Title
    ref={ref}
    className={cn(
      "text-lg font-semibold leading-none tracking-tight",
      className
    )}
    {...props}
  />
))
DialogTitle.displayName = DialogPrimitive.Title.displayName

const DialogDescription = React.forwardRef<
  React.ElementRef<typeof DialogPrimitive.Description>,
  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>
>(({ className, ...props }, ref) => (
  <DialogPrimitive.Description
    ref={ref}
    className={cn("text-sm text-muted-foreground", className)}
    {...props}
  />
))
DialogDescription.displayName = DialogPrimitive.Description.displayName

export {
  Dialog,
  DialogPortal,
  DialogOverlay,
  DialogClose,
  DialogTrigger,
  DialogContent,
  DialogHeader,
  DialogFooter,
  DialogTitle,
  DialogDescription,
}
</file>

<file path="src/components/ui/dropdown-menu.tsx">
"use client"

import * as React from "react"
import * as DropdownMenuPrimitive from "@radix-ui/react-dropdown-menu"
import { CheckIcon, ChevronRightIcon, CircleIcon } from "lucide-react"

import { cn } from "@/lib/utils"

function DropdownMenu({
  ...props
}: React.ComponentProps<typeof DropdownMenuPrimitive.Root>) {
  return <DropdownMenuPrimitive.Root data-slot="dropdown-menu" {...props} />
}

function DropdownMenuPortal({
  ...props
}: React.ComponentProps<typeof DropdownMenuPrimitive.Portal>) {
  return (
    <DropdownMenuPrimitive.Portal data-slot="dropdown-menu-portal" {...props} />
  )
}

function DropdownMenuTrigger({
  ...props
}: React.ComponentProps<typeof DropdownMenuPrimitive.Trigger>) {
  return (
    <DropdownMenuPrimitive.Trigger
      data-slot="dropdown-menu-trigger"
      {...props}
    />
  )
}

function DropdownMenuContent({
  className,
  sideOffset = 4,
  ...props
}: React.ComponentProps<typeof DropdownMenuPrimitive.Content>) {
  return (
    <DropdownMenuPrimitive.Portal>
      <DropdownMenuPrimitive.Content
        data-slot="dropdown-menu-content"
        sideOffset={sideOffset}
        className={cn(
          "bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 max-h-(--radix-dropdown-menu-content-available-height) min-w-[8rem] origin-(--radix-dropdown-menu-content-transform-origin) overflow-x-hidden overflow-y-auto rounded-md border p-1 shadow-md",
          className
        )}
        {...props}
      />
    </DropdownMenuPrimitive.Portal>
  )
}

function DropdownMenuGroup({
  ...props
}: React.ComponentProps<typeof DropdownMenuPrimitive.Group>) {
  return (
    <DropdownMenuPrimitive.Group data-slot="dropdown-menu-group" {...props} />
  )
}

function DropdownMenuItem({
  className,
  inset,
  variant = "default",
  ...props
}: React.ComponentProps<typeof DropdownMenuPrimitive.Item> & {
  inset?: boolean
  variant?: "default" | "destructive"
}) {
  return (
    <DropdownMenuPrimitive.Item
      data-slot="dropdown-menu-item"
      data-inset={inset}
      data-variant={variant}
      className={cn(
        "focus:bg-accent focus:text-accent-foreground data-[variant=destructive]:text-destructive data-[variant=destructive]:focus:bg-destructive/10 dark:data-[variant=destructive]:focus:bg-destructive/20 data-[variant=destructive]:focus:text-destructive data-[variant=destructive]:*:[svg]:!text-destructive [&_svg:not([class*='text-'])]:text-muted-foreground relative flex cursor-default items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 data-[inset]:pl-8 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4",
        className
      )}
      {...props}
    />
  )
}

function DropdownMenuCheckboxItem({
  className,
  children,
  checked,
  ...props
}: React.ComponentProps<typeof DropdownMenuPrimitive.CheckboxItem>) {
  return (
    <DropdownMenuPrimitive.CheckboxItem
      data-slot="dropdown-menu-checkbox-item"
      className={cn(
        "focus:bg-accent focus:text-accent-foreground relative flex cursor-default items-center gap-2 rounded-sm py-1.5 pr-2 pl-8 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4",
        className
      )}
      checked={checked}
      {...props}
    >
      <span className="pointer-events-none absolute left-2 flex size-3.5 items-center justify-center">
        <DropdownMenuPrimitive.ItemIndicator>
          <CheckIcon className="size-4" />
        </DropdownMenuPrimitive.ItemIndicator>
      </span>
      {children}
    </DropdownMenuPrimitive.CheckboxItem>
  )
}

function DropdownMenuRadioGroup({
  ...props
}: React.ComponentProps<typeof DropdownMenuPrimitive.RadioGroup>) {
  return (
    <DropdownMenuPrimitive.RadioGroup
      data-slot="dropdown-menu-radio-group"
      {...props}
    />
  )
}

function DropdownMenuRadioItem({
  className,
  children,
  ...props
}: React.ComponentProps<typeof DropdownMenuPrimitive.RadioItem>) {
  return (
    <DropdownMenuPrimitive.RadioItem
      data-slot="dropdown-menu-radio-item"
      className={cn(
        "focus:bg-accent focus:text-accent-foreground relative flex cursor-default items-center gap-2 rounded-sm py-1.5 pr-2 pl-8 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4",
        className
      )}
      {...props}
    >
      <span className="pointer-events-none absolute left-2 flex size-3.5 items-center justify-center">
        <DropdownMenuPrimitive.ItemIndicator>
          <CircleIcon className="size-2 fill-current" />
        </DropdownMenuPrimitive.ItemIndicator>
      </span>
      {children}
    </DropdownMenuPrimitive.RadioItem>
  )
}

function DropdownMenuLabel({
  className,
  inset,
  ...props
}: React.ComponentProps<typeof DropdownMenuPrimitive.Label> & {
  inset?: boolean
}) {
  return (
    <DropdownMenuPrimitive.Label
      data-slot="dropdown-menu-label"
      data-inset={inset}
      className={cn(
        "px-2 py-1.5 text-sm font-medium data-[inset]:pl-8",
        className
      )}
      {...props}
    />
  )
}

function DropdownMenuSeparator({
  className,
  ...props
}: React.ComponentProps<typeof DropdownMenuPrimitive.Separator>) {
  return (
    <DropdownMenuPrimitive.Separator
      data-slot="dropdown-menu-separator"
      className={cn("bg-border -mx-1 my-1 h-px", className)}
      {...props}
    />
  )
}

function DropdownMenuShortcut({
  className,
  ...props
}: React.ComponentProps<"span">) {
  return (
    <span
      data-slot="dropdown-menu-shortcut"
      className={cn(
        "text-muted-foreground ml-auto text-xs tracking-widest",
        className
      )}
      {...props}
    />
  )
}

function DropdownMenuSub({
  ...props
}: React.ComponentProps<typeof DropdownMenuPrimitive.Sub>) {
  return <DropdownMenuPrimitive.Sub data-slot="dropdown-menu-sub" {...props} />
}

function DropdownMenuSubTrigger({
  className,
  inset,
  children,
  ...props
}: React.ComponentProps<typeof DropdownMenuPrimitive.SubTrigger> & {
  inset?: boolean
}) {
  return (
    <DropdownMenuPrimitive.SubTrigger
      data-slot="dropdown-menu-sub-trigger"
      data-inset={inset}
      className={cn(
        "focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground flex cursor-default items-center rounded-sm px-2 py-1.5 text-sm outline-hidden select-none data-[inset]:pl-8",
        className
      )}
      {...props}
    >
      {children}
      <ChevronRightIcon className="ml-auto size-4" />
    </DropdownMenuPrimitive.SubTrigger>
  )
}

function DropdownMenuSubContent({
  className,
  ...props
}: React.ComponentProps<typeof DropdownMenuPrimitive.SubContent>) {
  return (
    <DropdownMenuPrimitive.SubContent
      data-slot="dropdown-menu-sub-content"
      className={cn(
        "bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 min-w-[8rem] origin-(--radix-dropdown-menu-content-transform-origin) overflow-hidden rounded-md border p-1 shadow-lg",
        className
      )}
      {...props}
    />
  )
}

export {
  DropdownMenu,
  DropdownMenuPortal,
  DropdownMenuTrigger,
  DropdownMenuContent,
  DropdownMenuGroup,
  DropdownMenuLabel,
  DropdownMenuItem,
  DropdownMenuCheckboxItem,
  DropdownMenuRadioGroup,
  DropdownMenuRadioItem,
  DropdownMenuSeparator,
  DropdownMenuShortcut,
  DropdownMenuSub,
  DropdownMenuSubTrigger,
  DropdownMenuSubContent,
}
</file>

<file path="src/components/ui/input.tsx">
import * as React from "react"

import { cn } from "@/lib/utils"

export interface InputProps
  extends React.InputHTMLAttributes<HTMLInputElement> {}

const Input = React.forwardRef<HTMLInputElement, InputProps>(
  ({ className, type, ...props }, ref) => {
    return (
      <input
        type={type}
        className={cn(
          "flex h-10 w-full rounded-md border border-slate-200 bg-white px-3 py-2 text-sm ring-offset-white file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-slate-500 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-slate-950 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 dark:border-slate-800 dark:bg-slate-950 dark:ring-offset-slate-950 dark:placeholder:text-slate-400 dark:focus-visible:ring-slate-300",
          className
        )}
        ref={ref}
        {...props}
      />
    )
  }
)
Input.displayName = "Input"

export { Input }
</file>

<file path="src/components/ui/progress.tsx">
import * as React from "react"
import * as ProgressPrimitive from "@radix-ui/react-progress"

import { cn } from "@/lib/utils"

const Progress = React.forwardRef<
  React.ElementRef<typeof ProgressPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>
>(({ className, value, ...props }, ref) => (
  <ProgressPrimitive.Root
    ref={ref}
    className={cn(
      "relative h-4 w-full overflow-hidden rounded-full bg-slate-100 dark:bg-slate-800",
      className
    )}
    {...props}
  >
    <ProgressPrimitive.Indicator
      className="h-full w-full flex-1 bg-slate-900 transition-all dark:bg-slate-50"
      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}
    />
  </ProgressPrimitive.Root>
))
Progress.displayName = ProgressPrimitive.Root.displayName

export { Progress }
</file>

<file path="src/components/ui/sheet.tsx">
// shadcn/ui Sheet component (Drawer)
"use client"

import * as React from "react"
import * as SheetPrimitive from "@radix-ui/react-dialog"
import { cn } from "@/lib/utils"

const Sheet = SheetPrimitive.Root
const SheetTrigger = SheetPrimitive.Trigger
const SheetClose = SheetPrimitive.Close

const SheetPortal = SheetPrimitive.Portal

const SheetOverlay = React.forwardRef<
  React.ElementRef<typeof SheetPrimitive.Overlay>,
  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>
>(({ className, ...props }, ref) => (
  <SheetPrimitive.Overlay
    ref={ref}
    className={cn(
      "fixed inset-0 z-50 bg-black/40 backdrop-blur-sm transition-all",
      className
    )}
    {...props}
  />
))
SheetOverlay.displayName = SheetPrimitive.Overlay.displayName

const SheetContent = React.forwardRef<
  React.ElementRef<typeof SheetPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content> & {
    side?: "top" | "bottom" | "left" | "right"
  }
>(({ side = "right", className, children, ...props }, ref) => (
  <SheetPortal>
    <SheetOverlay />
    <SheetPrimitive.Content
      ref={ref}
      className={cn(
        "fixed z-50 bg-card shadow-xl transition-all flex flex-col",
        side === "left" && "inset-y-0 left-0 h-full w-80 animate-in slide-in-from-left-80",
        side === "right" && "inset-y-0 right-0 h-full w-80 animate-in slide-in-from-right-80",
        side === "top" && "inset-x-0 top-0 w-full h-1/3 animate-in slide-in-from-top-80",
        side === "bottom" && "inset-x-0 bottom-0 w-full h-1/3 animate-in slide-in-from-bottom-80",
        className
      )}
      {...props}
    >
      {children}
    </SheetPrimitive.Content>
  </SheetPortal>
))
SheetContent.displayName = "SheetContent"

const SheetHeader = ({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) => (
  <div className={cn("flex flex-col gap-1.5", className)} {...props} />
)

const SheetTitle = React.forwardRef<
  React.ElementRef<typeof SheetPrimitive.Title>,
  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>
>(({ className, ...props }, ref) => (
  <SheetPrimitive.Title ref={ref} className={cn("text-lg font-semibold", className)} {...props} />
))
SheetTitle.displayName = SheetPrimitive.Title.displayName

export {
  Sheet,
  SheetTrigger,
  SheetClose,
  SheetContent,
  SheetHeader,
  SheetTitle,
}
</file>

<file path="src/components/AvailabilitySection.tsx">
'use client';

import { motion } from 'framer-motion';
import { Clock, Calendar, ThumbsUp, AlertTriangle } from 'lucide-react';
import { Button } from '@/components/ui/button';
import { useState } from 'react';
import { ScrollButton } from '@/components/ScrollButton';

const AvailabilitySection = () => {
  const [remainingSpots, setRemainingSpots] = useState(2);
  
  // Data for displaying authority credentials
  const credentials = [
    {
      title: "10+ Years",
      description: "Professional Experience",
      icon: <Clock className="h-5 w-5 text-secondary-500" />
    },
    {
      title: "45+ Clients",
      description: "Successful Collaborations",
      icon: <ThumbsUp className="h-5 w-5 text-secondary-500" />
    },
    {
      title: "July 2024",
      description: "Next availability",
      icon: <Calendar className="h-5 w-5 text-secondary-500" />
    }
  ];

  return (
    <section className="py-20 bg-gradient-to-br from-background/80 to-background">
      <div className="container mx-auto px-4">
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8 }}
          className="max-w-3xl mx-auto"
        >
          {/* Scarcity indicator - Limited available spots */}
          <div className="bg-primary-500/10 border border-primary-500/20 rounded-lg p-6 mb-8 text-center">
            <div className="inline-flex items-center gap-2 bg-primary-500/20 px-3 py-1 rounded-full mb-4">
              <AlertTriangle className="h-4 w-4 text-primary-500" />
              <span className="text-sm font-medium text-primary-500">Limited Availability</span>
            </div>
            
            <h2 className="text-3xl font-bold mb-3">Currently accepting select projects</h2>
            <p className="text-medium-contrast mb-6 max-w-xl mx-auto">
              Due to high demand and my commitment to delivering exceptional quality, 
              I only take on a limited number of projects each quarter.
            </p>
            
            <div className="bg-background/50 backdrop-blur-sm rounded-lg p-4 inline-block">
              <div className="text-center">
                <span className="text-4xl font-bold text-primary-500">{remainingSpots}</span>
                <span className="text-lg text-medium-contrast"> project slots remaining this quarter</span>
              </div>
            </div>
          </div>
          
          {/* Authority indicators */}
          <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mb-10">
            {credentials.map((credential, index) => (
              <motion.div
                key={index}
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.5, delay: index * 0.1 }}
                className="bg-card/40 backdrop-blur-sm rounded-lg p-5 flex items-center gap-4 border border-border/50"
              >
                <div className="p-3 bg-background/50 rounded-lg">
                  {credential.icon}
                </div>
                <div>
                  <h3 className="font-bold text-xl">{credential.title}</h3>
                  <p className="text-medium-contrast text-sm">{credential.description}</p>
                </div>
              </motion.div>
            ))}
          </div>
          
          <div className="text-center">
            <h3 className="text-xl font-medium mb-6">
              Interested in working together?
            </h3>
            <ScrollButton
              targetId="#contact"
              className="bg-gradient-to-r from-primary-500 to-secondary-500 hover:opacity-90 hover-lift glow px-8"
              size="lg"
            >
              Reserve Your Consultation
            </ScrollButton>
            <p className="mt-4 text-sm text-medium-contrast">
              Free 30-minute discovery calls to discuss your project needs
            </p>
          </div>
        </motion.div>
      </div>
    </section>
  );
};

export default AvailabilitySection;
</file>

<file path="src/components/BrandHero.tsx">
import { motion } from 'framer-motion';
import { TypeAnimation } from 'react-type-animation';

const BrandHero = () => {
  return (
    <section className="min-h-screen flex items-center justify-center bg-gradient-to-br from-slate-900 to-slate-800">
      <div className="container mx-auto px-4">
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8 }}
          className="text-center"
        >
          <h1 className="text-5xl md:text-7xl font-bold text-white mb-6">
            Mastering Complexity Through
            <span className="block text-blue-500 mt-2">
              <TypeAnimation
                sequence={[
                  'Full-Stack Development',
                  2000,
                  'AI Integration',
                  2000,
                  'Problem Solving',
                  2000,
                ]}
                wrapper="span"
                speed={50}
                repeat={Infinity}
              />
            </span>
          </h1>
          
          <p className="text-xl md:text-2xl text-gray-300 max-w-3xl mx-auto mb-8">
            A dedicated Web & Information Systems student at NJIT's College of Computing Sciences, with expertise in Full-Stack Development 
            and AI integration, driven to overcome technical challenges and build robust, 
            user-centric applications.
          </p>
          
          <div className="flex flex-wrap justify-center gap-4">
            <motion.a
              whileHover={{ scale: 1.05 }}
              whileTap={{ scale: 0.95 }}
              href="/projects"
              className="px-8 py-3 bg-blue-600 text-white rounded-lg font-semibold hover:bg-blue-700 transition-colors"
            >
              View My Work
            </motion.a>
            <motion.a
              whileHover={{ scale: 1.05 }}
              whileTap={{ scale: 0.95 }}
              href="/contact"
              className="px-8 py-3 border-2 border-white text-white rounded-lg font-semibold hover:bg-white hover:text-slate-900 transition-colors"
            >
              Let's Connect
            </motion.a>
          </div>
          
          <div className="mt-12 flex justify-center space-x-6">
            <div className="text-center">
              <h3 className="text-4xl font-bold text-white">3+</h3>
              <p className="text-gray-400">Years of Study</p>
            </div>
            <div className="text-center">
              <h3 className="text-4xl font-bold text-white">3.8</h3>
              <p className="text-gray-400">GPA at NJIT</p>
            </div>
            <div className="text-center">
              <h3 className="text-4xl font-bold text-white">10+</h3>
              <p className="text-gray-400">Technologies</p>
            </div>
          </div>
        </motion.div>
      </div>
    </section>
  );
};

export default BrandHero;
</file>

<file path="src/components/ExpertiseGrid.tsx">
import { motion } from 'framer-motion';

const expertiseAreas = [
  {
    title: 'Full-Stack Development',
    description: 'Building scalable web applications with modern frameworks and best practices',
    icon: '🚀',
    technologies: ['React', 'Node.js', 'TypeScript', 'Next.js']
  },
  {
    title: 'System Architecture',
    description: 'Designing robust and scalable system architectures for enterprise applications',
    icon: '🏗️',
    technologies: ['AWS', 'Docker', 'Microservices', 'API Design']
  },
  {
    title: 'Database Engineering',
    description: 'Optimizing database performance and designing efficient data structures',
    icon: '🗄️',
    technologies: ['PostgreSQL', 'MongoDB', 'Redis', 'SQL']
  },
  {
    title: 'DevOps & CI/CD',
    description: 'Implementing automated deployment pipelines and infrastructure as code',
    icon: '⚙️',
    technologies: ['Jenkins', 'GitHub Actions', 'Terraform', 'Kubernetes']
  }
];

const ExpertiseGrid = () => {
  return (
    <section className="py-20 bg-slate-50">
      <div className="container mx-auto px-4">
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8 }}
          className="text-center mb-16"
        >
          <h2 className="text-4xl font-bold text-slate-900 mb-4">Technical Expertise</h2>
          <p className="text-xl text-slate-600">Specialized knowledge areas that drive innovation</p>
        </motion.div>

        <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
          {expertiseAreas.map((area, index) => (
            <motion.div
              key={area.title}
              initial={{ opacity: 0, x: index % 2 === 0 ? -20 : 20 }}
              whileInView={{ opacity: 1, x: 0 }}
              transition={{ duration: 0.5, delay: index * 0.1 }}
              className="bg-white rounded-xl shadow-lg p-8 hover:shadow-xl transition-shadow"
            >
              <div className="text-4xl mb-4">{area.icon}</div>
              <h3 className="text-2xl font-bold text-slate-900 mb-3">{area.title}</h3>
              <p className="text-slate-600 mb-6">{area.description}</p>
              <div className="flex flex-wrap gap-2">
                {area.technologies.map((tech) => (
                  <span
                    key={tech}
                    className="px-3 py-1 bg-blue-100 text-blue-800 rounded-full text-sm"
                  >
                    {tech}
                  </span>
                ))}
              </div>
            </motion.div>
          ))}
        </div>
      </div>
    </section>
  );
};

export default ExpertiseGrid;
</file>

<file path="src/components/ScrollAnimation.tsx">
'use client';

import { useEffect, useRef, ReactNode } from 'react';

type ScrollAnimationProps = {
  children: ReactNode;
  className?: string;
  animation?: 'fade-up' | 'fade-in' | 'slide-in-right' | 'slide-in-left' | 'zoom-in';
  delay?: number;
  threshold?: number;
  once?: boolean;
};

export function ScrollAnimation({
  children,
  className = '',
  animation = 'fade-up',
  delay = 0,
  threshold = 0.1,
  once = true,
}: ScrollAnimationProps) {
  const ref = useRef<HTMLDivElement>(null);
  
  useEffect(() => {
    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            setTimeout(() => {
              entry.target.classList.add('animate');
            }, delay);
            
            if (once) {
              observer.unobserve(entry.target);
            }
          } else if (!once) {
            entry.target.classList.remove('animate');
          }
        });
      },
      {
        threshold,
        rootMargin: '0px 0px -100px 0px',
      }
    );
    
    const currentRef = ref.current;
    
    if (currentRef) {
      observer.observe(currentRef);
    }
    
    return () => {
      if (currentRef) {
        observer.unobserve(currentRef);
      }
    };
  }, [delay, once, threshold]);
  
  const getAnimationClass = () => {
    switch (animation) {
      case 'fade-up':
        return 'sa-fade-up';
      case 'fade-in':
        return 'sa-fade-in';
      case 'slide-in-right':
        return 'sa-slide-in-right';
      case 'slide-in-left':
        return 'sa-slide-in-left';
      case 'zoom-in':
        return 'sa-zoom-in';
      default:
        return 'sa-fade-up';
    }
  };
  
  return (
    <div ref={ref} className={`scroll-animation ${getAnimationClass()} ${className}`}>
      {children}
    </div>
  );
}
</file>

<file path="src/components/ScrollButton.tsx">
'use client';

import { Button } from "@/components/ui/button";

interface ScrollButtonProps {
  targetId: string;
  variant?: 'default' | 'outline' | 'ghost';
  size?: 'default' | 'sm' | 'lg' | 'icon';
  className?: string;
  children: React.ReactNode;
}

export function ScrollButton({ targetId, variant = 'default', size = 'default', className, children }: ScrollButtonProps) {
  const scrollToSection = () => {
    const element = document.querySelector(targetId);
    if (element) {
      element.scrollIntoView({ behavior: 'smooth' });
    }
  };

  return (
    <Button
      variant={variant}
      size={size}
      className={className}
      onClick={scrollToSection}
    >
      {children}
    </Button>
  );
}
</file>

<file path=".browserslistrc">
# Browsers that the project supports

# For production
[production]
>0.2%
not dead
not op_mini all

# For development
[development]
last 1 chrome version
last 1 firefox version
last 1 safari version
</file>

<file path="components.json">
{
  "$schema": "https://ui.shadcn.com/schema.json",
  "style": "new-york",
  "rsc": true,
  "tsx": true,
  "tailwind": {
    "config": "",
    "css": "src/app/globals.css",
    "baseColor": "neutral",
    "cssVariables": true,
    "prefix": ""
  },
  "aliases": {
    "components": "@/components",
    "utils": "@/lib/utils",
    "ui": "@/components/ui",
    "lib": "@/lib",
    "hooks": "@/hooks"
  },
  "iconLibrary": "lucide"
}
</file>

<file path="next.config.js">
/** @type {import('next').NextConfig} */
const nextConfig = {
  reactStrictMode: true,
  swcMinify: true,
  output: 'export',
  images: {
    unoptimized: true,
    formats: ['image/avif', 'image/webp'],
    remotePatterns: [
      // Add any remote image domains you might use
      // {
      //   protocol: 'https',
      //   hostname: 'example.com',
      // },
    ],
  },
  experimental: {
    // Enable useful experimental features
    optimizeCss: true,
    scrollRestoration: true,
  },
  // Enable basePath for GitHub Pages
  basePath: process.env.NEXT_PUBLIC_BASE_PATH || '',
};

module.exports = nextConfig;
</file>

<file path="src/app/about/page.tsx">
"use client";

import { Button } from "@/components/ui/button";
import { Card } from "@/components/ui/card";
import { Download, Mail } from "lucide-react";
import Link from "next/link";
import { useState } from "react";

// Function to generate random vibrant colors
const getRandomVibrantColor = () => {
  const vibrantColors = [
    'shadow-[0_0_15px_rgba(59,130,246,0.5)] bg-blue-500/10',
    'shadow-[0_0_15px_rgba(168,85,247,0.5)] bg-purple-500/10',
    'shadow-[0_0_15px_rgba(236,72,153,0.5)] bg-pink-500/10',
    'shadow-[0_0_15px_rgba(249,115,22,0.5)] bg-orange-500/10',
    'shadow-[0_0_15px_rgba(34,197,94,0.5)] bg-green-500/10',
    'shadow-[0_0_15px_rgba(20,184,166,0.5)] bg-teal-500/10',
    'shadow-[0_0_15px_rgba(6,182,212,0.5)] bg-cyan-500/10',
    'shadow-[0_0_15px_rgba(244,63,94,0.5)] bg-rose-500/10',
    'shadow-[0_0_15px_rgba(99,102,241,0.5)] bg-indigo-500/10',
    'shadow-[0_0_15px_rgba(139,92,246,0.5)] bg-violet-500/10'
  ];
  return vibrantColors[Math.floor(Math.random() * vibrantColors.length)];
};

export default function AboutPage() {
  const [skillColors, setSkillColors] = useState<{ [key: string]: string }>({});

  const updateSkillColor = (skill: string) => {
    setSkillColors(prev => ({
      ...prev,
      [skill]: getRandomVibrantColor()
    }));
  };

  const education = [
    {
      school: "New Jersey Institute of Technology (NJIT)",
      degree: "Information Systems B.S., Web & Information Systems (WIS)",
      period: "2023 - Present",
      description: "College of Computing Sciences. Current GPA: 3.8. Relevant coursework includes Data Structures & Algorithms, Software Design & Development, Database Management Systems."
    },
    {
      school: "Essex County College",
      degree: "Associate in Science, Computer Science",
      period: "2020 - 2022",
      description: "Graduated with honors. Member of Phi Theta Kappa Honor Society."
    }
  ];

  const activities = [
    {
      title: "Leadership & Activities",
      items: [
        "Member of Phi Theta Kappa Honor Society",
        "Member of National Society of Leadership and Success",
        "Member of Black Student Union",
        "Member of Computer Science Club"
      ]
    }
  ];

  const skills = [
    "JavaScript/TypeScript",
    "React/Next.js",
    "Node.js",
    "Python",
    "Java",
    "HTML/CSS",
    "Tailwind CSS",
    "Git/GitHub",
    "OpenAI API",
    "MongoDB",
    "Express.js",
    "React Native"
  ];

  return (
    <div className="min-h-screen bg-background pt-32">
      <div className="container mx-auto px-4">
        <div className="max-w-4xl mx-auto space-y-16">
          {/* About Me Section */}
          <section className="space-y-8">
            <h1 className="text-4xl font-bold">About Me</h1>
            <div className="prose prose-lg dark:prose-invert">
              <p>
                Hi, I'm Emmanuel Lawal, a Computer Science student at NJIT with a passion for Full Stack Development 
                and AI integration. I'm driven by the challenge of creating robust, user-centric applications that 
                solve real-world problems.
              </p>
              <p>
                My journey in computer science began at Essex County College, where I discovered my love for 
                programming and problem-solving. Now at NJIT, I'm expanding my knowledge and skills while working 
                on exciting projects that combine modern web technologies with AI capabilities.
              </p>
              <p>
                I believe in continuous learning and growth, which is reflected in my active participation in 
                various academic and professional organizations. My goal is to leverage technology to create 
                meaningful solutions that make a positive impact.
              </p>
            </div>
            <div className="flex gap-4">
              <Button asChild>
                <Link href="/contact" className="flex items-center gap-2">
                  <Mail className="h-4 w-4" /> Contact Me
                </Link>
              </Button>
              <Button variant="outline" className="flex items-center gap-2">
                <Download className="h-4 w-4" /> Download Resume
              </Button>
            </div>
          </section>

          {/* Education Section */}
          <section className="space-y-8">
            <h2 className="text-3xl font-bold">Education</h2>
            <div className="space-y-6">
              {education.map((edu, index) => (
                <Card key={index} className="p-6">
                  <div className="space-y-2">
                    <div className="flex justify-between items-start">
                      <div>
                        <h3 className="text-xl font-semibold">{edu.school}</h3>
                        <p className="text-muted-foreground">{edu.degree}</p>
                      </div>
                      <span className="text-sm text-muted-foreground">{edu.period}</span>
                    </div>
                    <p className="text-medium-contrast">{edu.description}</p>
                  </div>
                </Card>
              ))}
            </div>
          </section>

          {/* Activities Section */}
          <section className="space-y-8">
            <h2 className="text-3xl font-bold">Leadership & Activities</h2>
            <div className="space-y-6">
              {activities.map((activity, index) => (
                <Card key={index} className="p-6">
                  <div className="space-y-4">
                    <ul className="list-disc list-inside space-y-2">
                      {activity.items.map((item, itemIndex) => (
                        <li key={itemIndex} className="text-medium-contrast">{item}</li>
                      ))}
                    </ul>
                  </div>
                </Card>
              ))}
            </div>
          </section>

          {/* Skills Section */}
          <section className="space-y-8">
            <h2 className="text-3xl font-bold">Technical Skills</h2>
            <div className="grid grid-cols-2 md:grid-cols-3 gap-4">
              {skills.map((skill, index) => (
                <div
                  key={index}
                  className={`p-4 rounded-lg border bg-card text-card-foreground transition-all duration-300 hover:scale-105 cursor-default ${skillColors[skill] || ''}`}
                  onMouseEnter={() => updateSkillColor(skill)}
                  onMouseLeave={() => {
                    setSkillColors(prev => {
                      const newColors = { ...prev };
                      delete newColors[skill];
                      return newColors;
                    });
                  }}
                >
                  {skill}
                </div>
              ))}
            </div>
          </section>
        </div>
      </div>
    </div>
  );
}
</file>

<file path="src/components/ui/button.tsx">
import * as React from "react"
import { Slot } from "@radix-ui/react-slot"
import { cva, type VariantProps } from "class-variance-authority"

import { cn } from "@/lib/utils"

const buttonVariants = cva(
  "inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-lg text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive shadow-sm",
  {
    variants: {
      variant: {
        default:
          "bg-primary text-primary-foreground shadow-sm hover:bg-primary/90",
        destructive:
          "bg-destructive text-white shadow-sm hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60",
        outline:
          "border bg-background shadow-sm hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50",
        secondary:
          "bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80",
        ghost:
          "hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50",
        link: "text-primary underline-offset-4 hover:underline",
      },
      size: {
        default: "h-10 rounded-lg px-5 py-2 has-[>svg]:px-4",
        sm: "h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5",
        lg: "h-12 rounded-xl px-8 has-[>svg]:px-6",
        icon: "size-10 rounded-lg",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
    },
  }
)

function Button({
  className,
  variant,
  size,
  asChild = false,
  ...props
}: React.ComponentProps<"button"> &
  VariantProps<typeof buttonVariants> & {
    asChild?: boolean
  }) {
  const Comp = asChild ? Slot : "button"

  return (
    <Comp
      data-slot="button"
      className={cn(buttonVariants({ variant, size, className }))}
      {...props}
    />
  )
}

export { Button, buttonVariants }
</file>

<file path="src/components/ui/textarea.tsx">
import * as React from "react"

import { cn } from "@/lib/utils"

export interface TextareaProps
  extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {}

const Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(
  ({ className, ...props }, ref) => {
    return (
      <textarea
        className={cn(
          "flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50",
          className
        )}
        ref={ref}
        {...props}
      />
    )
  }
)
Textarea.displayName = "Textarea"

export { Textarea }
</file>

<file path="src/components/ContactDialog.tsx">
import { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogTrigger } from "@/components/ui/dialog"
import { Button } from "@/components/ui/button"
import { Input } from "@/components/ui/input"
import { Textarea } from "@/components/ui/textarea"
import { Send, Download, CheckCircle } from "lucide-react"
import { useState } from "react"

interface ContactDialogProps {
  children: React.ReactNode;
}

export function ContactDialog({ children }: ContactDialogProps) {
  const [showFreeResource, setShowFreeResource] = useState(false);
  
  return (
    <Dialog>
      <DialogTrigger asChild>
        {children}
      </DialogTrigger>
      <DialogContent className="sm:max-w-[500px] bg-card/95 backdrop-blur-lg border-border/50">
        <DialogHeader>
          <DialogTitle className="text-2xl font-bold bg-clip-text text-transparent bg-gradient-to-r from-primary-500 to-secondary-500">
            Send a Message
          </DialogTitle>
          <DialogDescription className="text-medium-contrast">
            How can I help you? Fill out the form below.
          </DialogDescription>
        </DialogHeader>
        
        <div className="bg-primary-500/10 rounded-lg p-3 mb-4 border border-primary-500/20">
          <div className="flex items-start gap-3">
            <Download className="h-5 w-5 text-primary-500 mt-0.5" />
            <div>
              <h4 className="font-medium text-foreground">Get my free Web Dev Resource Guide</h4>
              <p className="text-sm text-medium-contrast">I'll send you my curated collection of resources that helped me become a better developer</p>
              <Button 
                variant="link" 
                className="text-primary-500 p-0 h-auto mt-1"
                onClick={() => setShowFreeResource(!showFreeResource)}
              >
                {showFreeResource ? "Hide details" : "Learn more"}
              </Button>
            </div>
          </div>
          
          {showFreeResource && (
            <div className="mt-3 pl-8 space-y-2 text-sm text-medium-contrast">
              <p>This free guide includes:</p>
              <ul className="space-y-1">
                <li className="flex items-center gap-2">
                  <CheckCircle className="h-3 w-3 text-primary-500" />
                  <span>Top 10 resources for modern full-stack development</span>
                </li>
                <li className="flex items-center gap-2">
                  <CheckCircle className="h-3 w-3 text-primary-500" />
                  <span>AI integration tutorials and examples</span>
                </li>
                <li className="flex items-center gap-2">
                  <CheckCircle className="h-3 w-3 text-primary-500" />
                  <span>Personal productivity tools I use daily</span>
                </li>
              </ul>
              <p className="text-xs italic mt-2">You'll receive this guide after submitting the form</p>
            </div>
          )}
        </div>
        
        <form className="space-y-6 mt-4">
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div className="space-y-2">
              <Input
                id="name"
                placeholder="Full Name *"
                className="bg-background/50 border-border/50 focus:border-primary-500"
              />
            </div>
            <div className="space-y-2">
              <Input
                id="email"
                type="email"
                placeholder="Email Address *"
                className="bg-background/50 border-border/50 focus:border-primary-500"
              />
            </div>
          </div>
          <div className="space-y-2">
            <Input
              id="subject"
              placeholder="Subject"
              className="bg-background/50 border-border/50 focus:border-primary-500"
            />
          </div>
          <div className="space-y-2">
            <Textarea
              id="message"
              placeholder="Message *"
              className="min-h-[150px] bg-background/50 border-border/50 focus:border-primary-500"
            />
          </div>
          
          <div className="flex items-start gap-2">
            <div className="flex h-6 items-center">
              <input
                id="receive-updates"
                type="checkbox"
                className="h-4 w-4 rounded border-border/50 text-primary-500 focus:ring-primary-500/20"
                defaultChecked
              />
            </div>
            <div className="text-sm">
              <label htmlFor="receive-updates" className="text-medium-contrast">
                Yes, I'd like to receive occasional updates about new projects and insights
              </label>
            </div>
          </div>
          
          <Button 
            type="submit" 
            className="w-full bg-gradient-to-r from-primary-500 to-secondary-500 hover:opacity-90"
          >
            <Send className="mr-2 h-4 w-4" /> Send Message & Get Free Guide
          </Button>
          
          <p className="text-xs text-center text-medium-contrast mt-2">
            I personally respond to all messages within 24-48 hours
          </p>
        </form>
      </DialogContent>
    </Dialog>
  )
}
</file>

<file path=".gitignore">
# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# dependencies
/node_modules
/.pnp
.pnp.*
.yarn/*
!.yarn/patches
!.yarn/plugins
!.yarn/releases
!.yarn/versions

# testing
/coverage

# next.js
/.next/
/out/

# production
/build

# misc
.DS_Store
*.pem

# debug
npm-debug.log*
yarn-debug.log*
yarn-error.log*
.pnpm-debug.log*

# env files (can opt-in for committing if needed)
.env*

# vercel
.vercel

# typescript
*.tsbuildinfo
next-env.d.ts

.vercel
</file>

<file path="eslint.config.mjs">
// @ts-check

import { dirname } from "path";
import { fileURLToPath } from "url";
import eslint from "@eslint/js";
import tseslint from "@typescript-eslint/eslint-plugin";
import parser from "@typescript-eslint/parser";
import nextPlugin from "@next/eslint-plugin-next";
import reactRecommended from "eslint-plugin-react/configs/recommended.js";
import reactHooks from "eslint-plugin-react-hooks";

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

export default [
  eslint.configs.recommended,
  {
    plugins: {
      "@typescript-eslint": tseslint,
      "@next/next": nextPlugin,
    },
    languageOptions: {
      parser: parser,
      parserOptions: {
        ecmaVersion: "latest",
        sourceType: "module",
        ecmaFeatures: {
          jsx: true
        }
      },
    },
    rules: {
      // Next.js rules
      "@next/next/no-html-link-for-pages": "error",
      "@next/next/no-img-element": "warn",
      
      // React rules
      "react/prop-types": "off", // Not needed with TypeScript
      "react/react-in-jsx-scope": "off", // Not needed with Next.js
      
      // TypeScript rules
      "@typescript-eslint/no-unused-vars": ["warn", { "argsIgnorePattern": "^_" }],
      "@typescript-eslint/no-explicit-any": "warn",
      
      // General rules
      "no-console": ["warn", { allow: ["warn", "error"] }],
    },
    settings: {
      react: {
        version: "detect",
      },
    },
  },
  {
    files: ["**/*.ts", "**/*.tsx"],
    languageOptions: {
      parser: parser,
      parserOptions: {
        project: "./tsconfig.json",
      },
    },
  }
];
</file>

<file path="tsconfig.json">
{
  "compilerOptions": {
    "target": "ES2017",
    "lib": [
      "dom",
      "dom.iterable",
      "esnext"
    ],
    "allowJs": true,
    "skipLibCheck": true,
    "strict": true,
    "noEmit": true,
    "esModuleInterop": true,
    "module": "esnext",
    "moduleResolution": "bundler",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "jsx": "preserve",
    "incremental": true,
    "plugins": [
      {
        "name": "next"
      }
    ],
    "paths": {
      "@/*": [
        "./src/*"
      ]
    }
  },
  "include": [
    "next-env.d.ts",
    "**/*.ts",
    "**/*.tsx",
    ".next/types/**/*.ts",
    "out/types/**/*.ts"
  ],
  "exclude": [
    "node_modules"
  ]
}
</file>

<file path="src/app/projects/page.tsx">
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from "@/components/ui/card";
import { Github, Globe } from "lucide-react";
import Link from "next/link";
import Image from "next/image";
import { ScrollAnimation } from "@/components/ScrollAnimation";

export default function ProjectsPage() {
  const projects = [
    {
      title: "Three Decades of Mobility",
      description: "A data visualization project exploring the relationship between vehicle registration trends and cost of living over 30 years. Analyzes how areas with different housing costs show varying patterns of vehicle ownership using economic indicators like CPI.",
      image: "/projects/ai-calc.jpg",
      tags: ["React", "D3.js", "TypeScript", "Data Visualization", "Economic Analysis"],
      liveUrl: "https://visualization-project-iota.vercel.app/",
      githubUrl: "https://github.com/emmanuellawal/visualization_Project"
    },
    {
      title: "AI-Enhanced Calculator",
      description: "A modern calculator app built with Expo and React Native, featuring natural language processing powered by OpenAI's GPT-3.5-turbo. Supports conversational calculations and unit conversions.",
      image: "/projects/data-viz.jpg",
      tags: ["React Native", "Expo", "OpenAI API", "TypeScript", "Mobile Development"],
      liveUrl: "#",
      githubUrl: "https://github.com/emmanuellawal/expo-calculator-app"
    },
    {
      title: "Modern Web Portfolio",
      description: "A modern portfolio website built with Next.js, TypeScript, and Tailwind CSS. Features responsive design, dark mode, and smooth animations.",
      image: "/projects/data-viz.jpg",
      tags: ["Next.js", "TypeScript", "Tailwind CSS", "Vercel"],
      liveUrl: "#",
      githubUrl: "#"
    }
  ];

  return (
    <div className="min-h-screen bg-background pt-32">
      <div className="container mx-auto px-4">
        <div className="max-w-5xl mx-auto space-y-16">
          {/* Header */}
          <ScrollAnimation animation="fade-up">
            <div className="space-y-4">
              <h1 className="text-4xl font-bold">Projects</h1>
              <p className="text-lg text-medium-contrast max-w-2xl">
                Here are some of my key projects that showcase my skills in full-stack development, 
                mobile development, and AI integration. Each project represents my commitment to 
                creating robust and user-centric solutions.
              </p>
            </div>
          </ScrollAnimation>

          {/* Projects Grid */}
          <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
            {projects.map((project, index) => {
              // Determine the primary color based on the first tag
              let hueColor = "from-blue-500/20 to-purple-500/20"; // default gradient
              const firstTag = project.tags[0];
              if (firstTag.includes("React") || firstTag.includes("Next.js")) {
                hueColor = "from-blue-500/20 to-cyan-500/20";
              } else if (firstTag.includes("Type")) {
                hueColor = "from-blue-400/20 to-indigo-500/20";
              } else if (firstTag.includes("D3") || firstTag.includes("Data")) {
                hueColor = "from-green-500/20 to-emerald-500/20";
              } else if (firstTag.includes("OpenAI") || firstTag.includes("AI")) {
                hueColor = "from-purple-500/20 to-pink-500/20";
              } else if (firstTag.includes("Mobile") || firstTag.includes("Expo")) {
                hueColor = "from-orange-500/20 to-red-500/20";
              }

              return (
                <ScrollAnimation 
                  key={index} 
                  animation={index % 2 === 0 ? "slide-in-left" : "slide-in-right"}
                  delay={index * 100}
                >
                  <div className="relative group">
                    <div className={`absolute inset-0 bg-gradient-to-br ${hueColor} opacity-0 group-hover:opacity-100 transition-opacity duration-300 rounded-lg blur-xl`} />
                    <Card className="relative group overflow-hidden border-0 bg-card/80 backdrop-blur-sm transition-all duration-300 hover:bg-accent/80 hover:-translate-y-1">
                      <div className="aspect-video relative">
                        <Image
                          src={project.image}
                          alt={`Screenshot of ${project.title}`}
                          fill
                          className="object-cover transition-transform duration-300 group-hover:scale-105"
                          priority={index < 2}
                        />
                        <div className="absolute inset-0 bg-gradient-to-b from-primary/20 to-background/20 transition-opacity duration-300 group-hover:opacity-0" />
                      </div>
                      <CardHeader>
                        <CardTitle className="text-xl font-semibold">{project.title}</CardTitle>
                        <CardDescription className="text-muted-foreground">{project.description}</CardDescription>
                      </CardHeader>
                      <CardContent>
                        <div className="flex flex-wrap gap-2">
                          {project.tags.map((tag, tagIndex) => {
                            // Define color classes based on technology category
                            let colorClass = "bg-primary/10 text-primary";
                            if (tag.includes("React") || tag.includes("Next.js")) {
                              colorClass = "bg-blue-500/10 text-blue-500";
                            } else if (tag.includes("Type")) {
                              colorClass = "bg-blue-400/10 text-blue-400";
                            } else if (tag.includes("D3") || tag.includes("Data")) {
                              colorClass = "bg-green-500/10 text-green-500";
                            } else if (tag.includes("OpenAI") || tag.includes("AI")) {
                              colorClass = "bg-purple-500/10 text-purple-500";
                            } else if (tag.includes("Mobile") || tag.includes("Expo")) {
                              colorClass = "bg-orange-500/10 text-orange-500";
                            } else if (tag.includes("Economic")) {
                              colorClass = "bg-yellow-500/10 text-yellow-500";
                            } else if (tag.includes("Tailwind")) {
                              colorClass = "bg-cyan-500/10 text-cyan-500";
                            } else if (tag.includes("Vercel")) {
                              colorClass = "bg-gray-500/10 text-gray-500";
                            }
                            
                            return (
                              <span
                                key={tagIndex}
                                className={`px-3 py-1.5 text-sm font-medium rounded-full ${colorClass} transition-colors duration-200 hover:bg-opacity-20`}
                              >
                                {tag}
                              </span>
                            );
                          })}
                        </div>
                      </CardContent>
                      <CardFooter className="flex gap-4">
                        <Button asChild variant="outline" size="sm" className="transition-colors hover:bg-background/80">
                          <Link href={project.liveUrl} target="_blank" rel="noopener noreferrer" className="flex items-center gap-2">
                            <Globe className="h-4 w-4" /> Live Demo
                          </Link>
                        </Button>
                        <Button asChild variant="outline" size="sm" className="transition-colors hover:bg-background/80">
                          <Link href={project.githubUrl} target="_blank" rel="noopener noreferrer" className="flex items-center gap-2">
                            <Github className="h-4 w-4" /> View Code
                          </Link>
                        </Button>
                      </CardFooter>
                    </Card>
                  </div>
                </ScrollAnimation>
              );
            })}
          </div>

          {/* Contact CTA */}
          <ScrollAnimation animation="fade-up">
            <div className="text-center space-y-6 py-8">
              <h2 className="text-2xl font-semibold">Interested in discussing a project?</h2>
              <Button asChild size="lg">
                <Link href="/contact">Let's Connect</Link>
              </Button>
            </div>
          </ScrollAnimation>
        </div>
      </div>
    </div>
  );
}
</file>

<file path="src/components/ui/card.tsx">
import * as React from "react"
import { cn } from "@/lib/utils"

interface CardProps extends React.HTMLAttributes<HTMLDivElement> {
  className?: string
}

function Card({ className, ...props }: CardProps) {
  return (
    <div
      data-slot="card"
      className={cn(
        "bg-card text-card-foreground flex flex-col gap-6 rounded-2xl border border-border py-8 px-6 shadow-md",
        className
      )}
      {...props}
    />
  )
}

interface CardHeaderProps extends React.HTMLAttributes<HTMLDivElement> {
  className?: string
}

function CardHeader({ className, ...props }: CardHeaderProps) {
  return (
    <div
      data-slot="card-header"
      className={cn(
        "grid auto-rows-min grid-rows-[auto_auto] items-start gap-2 px-0 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6",
        className
      )}
      {...props}
    />
  )
}

interface CardTitleProps extends React.HTMLAttributes<HTMLHeadingElement> {
  className?: string
}

function CardTitle({ className, ...props }: CardTitleProps) {
  return (
    <h3
      data-slot="card-title"
      className={cn("leading-snug font-semibold text-lg capitalize", className)}
      {...props}
    />
  )
}

interface CardDescriptionProps extends React.HTMLAttributes<HTMLParagraphElement> {
  className?: string
}

function CardDescription({ className, ...props }: CardDescriptionProps) {
  return (
    <p
      data-slot="card-description"
      className={cn("text-muted-foreground text-sm", className)}
      {...props}
    />
  )
}

interface CardActionProps extends React.HTMLAttributes<HTMLDivElement> {
  className?: string
}

function CardAction({ className, ...props }: CardActionProps) {
  return (
    <div
      data-slot="card-action"
      className={cn(
        "col-start-2 row-span-2 row-start-1 self-start justify-self-end",
        className
      )}
      {...props}
    />
  )
}

interface CardContentProps extends React.HTMLAttributes<HTMLDivElement> {
  className?: string
}

function CardContent({ className, ...props }: CardContentProps) {
  return (
    <div
      data-slot="card-content"
      className={cn("px-0", className)}
      {...props}
    />
  )
}

interface CardFooterProps extends React.HTMLAttributes<HTMLDivElement> {
  className?: string
}

function CardFooter({ className, ...props }: CardFooterProps) {
  return (
    <div
      data-slot="card-footer"
      className={cn("flex items-center px-0 pt-4", className)}
      {...props}
    />
  )
}

export {
  Card,
  CardHeader,
  CardFooter,
  CardTitle,
  CardAction,
  CardDescription,
  CardContent,
}
</file>

<file path="src/lib/utils.ts">
import { type ClassValue, clsx } from "clsx"
import { twMerge } from "tailwind-merge"

/**
 * Combines class names with Tailwind's class name merging
 */
export function cn(...inputs: ClassValue[]) {
  return twMerge(clsx(inputs))
}

/**
 * Format a date using Intl.DateTimeFormat
 */
export function formatDate(date: Date | string | number, options: Intl.DateTimeFormatOptions = {}) {
  const defaultOptions: Intl.DateTimeFormatOptions = {
    month: 'long',
    day: 'numeric',
    year: 'numeric',
    ...options,
  }
  
  return new Intl.DateTimeFormat('en-US', defaultOptions).format(
    typeof date === 'string' || typeof date === 'number' ? new Date(date) : date
  )
}

/**
 * Debounce a function call
 */
export function debounce<T extends (...args: any[]) => any>(
  fn: T,
  delay: number
): (...args: Parameters<T>) => void {
  let timeoutId: ReturnType<typeof setTimeout> | null = null
  
  return function(this: any, ...args: Parameters<T>) {
    if (timeoutId) {
      clearTimeout(timeoutId)
    }
    
    timeoutId = setTimeout(() => {
      fn.apply(this, args)
      timeoutId = null
    }, delay)
  }
}

/**
 * Generate a random ID
 */
export function generateId(length: number = 8): string {
  return Math.random()
    .toString(36)
    .substring(2, 2 + length)
}

/**
 * Safely access nested object properties
 */
export function getNestedValue<T>(
  obj: Record<string, any> | undefined | null,
  path: string | string[],
  defaultValue?: T
): T | undefined {
  const keys = Array.isArray(path) ? path : path.split('.')
  let result = obj
  
  for (const key of keys) {
    if (result === undefined || result === null) return defaultValue
    result = result[key]
  }
  
  return result === undefined ? defaultValue : (result as T)
}
</file>

<file path="postcss.config.mjs">
/** @type {import('postcss').Config} */
export default {
  plugins: {
    tailwindcss: {},
    autoprefixer: {},
  },
}
</file>

<file path="src/components/Footer.tsx">
'use client';

import Link from 'next/link'
import { Github, Linkedin, Mail, ArrowRight, CheckCircle } from 'lucide-react'
import { useState } from 'react'
import { Button } from './ui/button'
import { Input } from './ui/input'

const Footer = () => {
  const currentYear = new Date().getFullYear()
  const [email, setEmail] = useState('')
  const [subscribed, setSubscribed] = useState(false)
  const [commitmentChoice, setCommitmentChoice] = useState('')

  const handleSubscribe = (e: React.FormEvent) => {
    e.preventDefault()
    if (email) {
      setSubscribed(true)
      // In a real implementation, you would send this to your API
      setEmail('')
    }
  }

  return (
    <footer className="w-full border-t border-border/40 bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60">
      <div className="container py-8">
        {/* Newsletter Signup - Using Commitment and Consistency */}
        {/* 
        <div className="mb-12 max-w-3xl mx-auto border border-primary-500/20 rounded-lg p-6 bg-primary-500/5">
          <div className="text-center mb-6">
            <h3 className="text-xl font-semibold mb-2">Join the Innovation Journey</h3>
            <p className="text-medium-contrast max-w-xl mx-auto">
              Stay updated with the latest in tech and development. I share insights and resources that have helped me grow as a developer.
            </p>
          </div>
          
          {!subscribed ? (
            <form onSubmit={handleSubscribe} className="space-y-4">
              <div className="grid grid-cols-1 md:grid-cols-3 gap-3 mb-4">
                {['Web Development', 'AI & ML', 'Career Growth'].map((topic) => (
                  <div 
                    key={topic}
                    onClick={() => setCommitmentChoice(topic)}
                    className={`cursor-pointer p-3 border rounded-md text-center transition-colors
                      ${commitmentChoice === topic 
                        ? 'border-primary-500 bg-primary-500/10 text-primary-500' 
                        : 'border-border/50 hover:border-primary-500/50 hover:bg-primary-500/5'
                      }`}
                  >
                    {topic}
                  </div>
                ))}
              </div>
              
              <div className="flex flex-col sm:flex-row gap-2">
                <Input
                  type="email"
                  placeholder="Your email address"
                  value={email}
                  onChange={(e) => setEmail(e.target.value)}
                  className="flex-grow bg-background/50"
                  required
                />
                <Button 
                  type="submit"
                  className="bg-primary-500 hover:bg-primary-600 text-white"
                >
                  Subscribe <ArrowRight className="ml-2 h-4 w-4" />
                </Button>
              </div>
              
              <p className="text-xs text-center text-medium-contrast mt-3">
                I respect your privacy and will never share your information.
                You can unsubscribe at any time.
              </p>
            </form>
          ) : (
            <div className="text-center p-4 bg-success-500/10 border border-success-500/20 rounded-md">
              <div className="flex items-center justify-center gap-2 text-success-500 mb-2">
                <CheckCircle className="h-5 w-5" />
                <span className="font-medium">Successfully subscribed!</span>
              </div>
              <p className="text-medium-contrast">
                Thank you for joining. Your first resource about {commitmentChoice} will arrive shortly.
              </p>
            </div>
          )}
        </div>
        */}
        
        <div className="grid grid-cols-2 gap-8 sm:grid-cols-4">
          {/* Navigation Links */}
          <div className="flex flex-col gap-2">
            <h3 className="text-sm font-semibold">Navigation</h3>
            <nav className="flex flex-col gap-2 text-sm text-muted-foreground">
              <Link href="/" className="hover:text-foreground">Home</Link>
              <Link href="/about" className="hover:text-foreground">About</Link>
              <Link href="/skills" className="hover:text-foreground">Skills</Link>
              <Link href="/projects" className="hover:text-foreground">Projects</Link>
              <Link href="/contact" className="hover:text-foreground">Contact</Link>
            </nav>
          </div>

          {/* Resources */}
          <div className="flex flex-col gap-2">
            <h3 className="text-sm font-semibold">Resources</h3>
            <nav className="flex flex-col gap-2 text-sm text-muted-foreground">
              <Link href="/vision" className="hover:text-foreground">Vision</Link>
              <Link href="/leadership" className="hover:text-foreground">Leadership</Link>
              <Link href="/projects" className="hover:text-foreground">Projects</Link>
            </nav>
          </div>

          {/* Legal */}
          <div className="flex flex-col gap-2">
            <h3 className="text-sm font-semibold">Legal</h3>
            <nav className="flex flex-col gap-2 text-sm text-muted-foreground">
              <Link href="/privacy" className="hover:text-foreground">Privacy Policy</Link>
              <Link href="/terms" className="hover:text-foreground">Terms of Service</Link>
            </nav>
          </div>

          {/* Social Links */}
          <div className="flex flex-col gap-2">
            <h3 className="text-sm font-semibold">Connect</h3>
            <div className="flex gap-4 text-muted-foreground">
              <a
                href="https://github.com/emmanuellawal"
                target="_blank"
                rel="noopener noreferrer"
                className="hover:text-foreground"
              >
                <Github className="h-5 w-5" />
              </a>
              <a
                href="https://www.linkedin.com/in/emmanuel-lawal-98519718b/"
                target="_blank"
                rel="noopener noreferrer"
                className="hover:text-foreground"
              >
                <Linkedin className="h-5 w-5" />
              </a>
              <a
                href="mailto:emmanuellawal2024@gmail.com"
                className="hover:text-foreground"
              >
                <Mail className="h-5 w-5" />
              </a>
            </div>
          </div>
        </div>

        {/* Copyright */}
        <div className="flex items-center justify-center border-t border-border/40 mt-8 pt-8 text-center text-sm text-muted-foreground">
          <p>© {currentYear} Emmanuel Lawal. All rights reserved.</p>
        </div>
      </div>
    </footer>
  )
}

export default Footer
</file>

<file path="src/components/Testimonials.tsx">
import { motion } from 'framer-motion';
import { Star, Award, BadgeCheck, VerifiedIcon } from 'lucide-react';

// Updated collaborations with peers instead of client testimonials
const collaborations = [
  {
    quote: "Working with Emmanuel on our data visualization project was an incredible experience. His technical expertise and innovative approach to problem-solving helped us create visualizations that were both informative and visually striking. His ability to translate complex data into meaningful insights was impressive.",
    author: "Alex Chen",
    position: "Data Scientist",
    image: "/testimonials/alex.jpg",
    organization: "NJIT Data Science Club",
    project: "Urban Mobility Analysis",
    rating: 5
  },
  {
    quote: "Emmanuel's contributions to our AI research project were invaluable. He quickly grasped complex ML concepts and implemented elegant solutions that improved our model's accuracy significantly. His collaborative spirit and clear communication made working together seamless and productive.",
    author: "Maya Rodriguez",
    position: "ML Engineer",
    image: "/testimonials/maya.jpg",
    organization: "AI Research Collaborative",
    project: "Natural Language Processing",
    rating: 5
  },
  {
    quote: "During our hackathon, Emmanuel demonstrated exceptional leadership and technical skills. He not only contributed significant code but also helped other team members overcome challenges. His ability to stay focused under pressure and deliver quality work was crucial to our team winning first place.",
    author: "Jordan Thompson",
    position: "Software Developer",
    image: "/testimonials/jordan.jpg",
    organization: "HackNJIT",
    project: "Healthcare AI Solution",
    rating: 5
  }
];

// Updated to reflect academic and peer recognition
const recognitions = [
  {
    title: "Outstanding Team Member",
    organization: "NJIT Computer Science Department",
    year: 2023,
    logo: "/logos/njit.svg"
  },
  {
    title: "Hackathon Winner",
    organization: "HackNJIT 2022",
    year: 2022,
    logo: "/logos/hacknj.svg"
  },
  {
    title: "Research Contributor",
    organization: "AI Research Collaborative",
    year: 2023,
    logo: "/logos/airesearch.svg"
  }
];

const Testimonials = () => {
  return (
    <section className="py-20 bg-gradient-to-br from-slate-900 to-slate-800">
      <div className="container mx-auto px-4">
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8 }}
          className="text-center mb-16"
        >
          <div className="inline-block mb-3">
            <span className="bg-accent-500/20 text-accent-500 text-sm font-medium py-1 px-3 rounded-full flex items-center gap-1 mx-auto w-fit">
              <BadgeCheck className="h-4 w-4" />
              <span>Collaborative Projects</span>
            </span>
          </div>
          <h2 className="text-4xl font-bold text-white mb-4">Peer Collaborations</h2>
          <p className="text-xl text-gray-300 max-w-2xl mx-auto">
            I've had the opportunity to work with talented peers on various projects.
            Here's what they have to say about our collaborative experiences.
          </p>
        </motion.div>

        <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
          {collaborations.map((collaboration, index) => (
            <motion.div
              key={collaboration.author}
              initial={{ opacity: 0, y: 20 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.5, delay: index * 0.2 }}
              className="bg-white rounded-xl p-8 shadow-lg hover:shadow-xl transition-shadow relative"
            >
              {/* Credibility markers */}
              <div className="absolute -top-3 right-8 bg-white px-3 py-1 rounded-full shadow">
                <div className="flex gap-1">
                  {[...Array(collaboration.rating)].map((_, i) => (
                    <Star key={i} className="h-4 w-4 fill-yellow-400 text-yellow-400" />
                  ))}
                </div>
              </div>
              
              <div className="flex items-center mb-3">
                <div className="w-16 h-16 rounded-full bg-gray-200 mr-4">
                  {/* Add actual images later */}
                  <div className="w-full h-full rounded-full bg-gradient-to-br from-blue-500 to-purple-500" />
                </div>
                <div>
                  <div className="flex items-center gap-1">
                  <h4 className="text-xl font-semibold text-slate-900">{collaboration.author}</h4>
                    <VerifiedIcon className="h-4 w-4 text-blue-500" />
                  </div>
                  <p className="text-slate-600">{collaboration.position}</p>
                  <p className="text-slate-500 text-sm">{collaboration.organization}</p>
                </div>
              </div>
              
              <div className="mb-4 text-sm font-medium text-slate-500">
                <span className="bg-slate-100 px-2 py-1 rounded flex items-center w-fit">
                  <span>Project: {collaboration.project}</span>
                </span>
              </div>
              
              <blockquote className="text-slate-700 italic mb-4">"{collaboration.quote}"</blockquote>
              
              {/* Social proof verification element */}
              <div className="pt-4 mt-4 border-t border-slate-100 flex items-center justify-between text-xs text-slate-500">
                <span className="flex items-center gap-1">
                  <Award className="h-3 w-3" />
                  <span>Academic Collaboration</span>
                </span>
                <span>Collaboration Period: 2023</span>
              </div>
            </motion.div>
          ))}
        </div>

        {/* Academic Recognition */}
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8, delay: 0.3 }}
          className="mt-20 bg-white/5 rounded-2xl p-8 border border-white/10"
        >
          <h3 className="text-2xl font-bold text-white text-center mb-8">Academic Recognition</h3>
          <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
            {recognitions.map((item, index) => (
              <div key={index} className="bg-white/10 rounded-lg p-5 backdrop-blur-sm hover:bg-white/15 transition-colors">
                <div className="flex items-center gap-3 mb-3">
                  <Award className="h-6 w-6 text-accent-500" />
                  <h4 className="text-xl font-medium text-white">{item.title}</h4>
                </div>
                <p className="text-gray-300 mb-2">{item.organization}</p>
                <p className="text-sm text-gray-400">Recognized in {item.year}</p>
              </div>
            ))}
          </div>
        </motion.div>

        <motion.div
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8 }}
          className="mt-16 text-center"
        >
          <div className="flex flex-wrap justify-center gap-8">
            <div className="bg-white/10 rounded-lg px-6 py-4">
              <h3 className="text-3xl font-bold text-white mb-2">15+</h3>
              <p className="text-gray-300">Team Projects</p>
            </div>
            <div className="bg-white/10 rounded-lg px-6 py-4">
              <h3 className="text-3xl font-bold text-white mb-2">8</h3>
              <p className="text-gray-300">Hackathons</p>
            </div>
            <div className="bg-white/10 rounded-lg px-6 py-4">
              <h3 className="text-3xl font-bold text-white mb-2">4.9/5</h3>
              <p className="text-gray-300">Peer Rating</p>
            </div>
          </div>
        </motion.div>
      </div>
    </section>
  );
};

export default Testimonials;
</file>

<file path="tailwind.config.mjs">
/** @type {import('tailwindcss').Config} */
export default {
  darkMode: "class",
  content: [
    './pages/**/*.{js,ts,jsx,tsx,mdx}',
    './components/**/*.{js,ts,jsx,tsx,mdx}',
    './app/**/*.{js,ts,jsx,tsx,mdx}',
    './src/**/*.{js,ts,jsx,tsx,mdx}',
  ],
  theme: {
    extend: {
      fontFamily: {
        sans: ['Inter', 'Open Sans', 'Nunito', 'system-ui', 'sans-serif'],
      },
      colors: {
        primary: {
          50: '#f0f9ff',
          100: '#e0f2fe',
          200: '#bae6fd',
          300: '#7dd3fc',
          400: '#38bdf8',
          500: '#0ea5e9', // Vibrant blue
          600: '#0284c7',
          700: '#0369a1',
          800: '#075985',
          900: '#0c4a6e',
        },
        secondary: {
          50: '#fdf4ff',
          100: '#fae8ff',
          200: '#f5d0fe',
          300: '#f0abfc',
          400: '#e879f9',
          500: '#d946ef', // Electric purple
          600: '#c026d3',
          700: '#a21caf',
          800: '#86198f',
          900: '#701a75',
        },
        accent: {
          50: '#fff7ed',
          100: '#ffedd5',
          200: '#fed7aa',
          300: '#fdba74',
          400: '#fb923c',
          500: '#f97316', // Energetic orange
          600: '#ea580c',
          700: '#c2410c',
          800: '#9a3412',
          900: '#7c2d12',
        },
        neutral: {
          50: '#fafafa',
          100: '#f4f4f5',
          200: '#e4e4e7',
          300: '#d4d4d8',
          400: '#a1a1aa',
          500: '#71717a',
          600: '#52525b',
          700: '#3f3f46',
          800: '#27272a',
          900: '#18181b',
        },
        // Semantic Colors
        success: {
          light: '#dcfce7',
          DEFAULT: '#22c55e',
          dark: '#15803d',
        },
        error: {
          light: '#fee2e2',
          DEFAULT: '#ef4444',
          dark: '#b91c1c',
        },
        warning: {
          light: '#fef3c7',
          DEFAULT: '#f59e0b',
          dark: '#b45309',
        },
        // System Colors
        border: "hsl(var(--border))",
        input: "hsl(var(--input))",
        ring: "hsl(var(--ring))",
        background: "hsl(var(--background))",
        foreground: "hsl(var(--foreground))",
        destructive: {
          DEFAULT: "hsl(var(--destructive))",
          foreground: "hsl(var(--destructive-foreground))",
        },
        muted: {
          DEFAULT: "hsl(var(--muted))",
          foreground: "hsl(var(--muted-foreground))",
        },
        popover: {
          DEFAULT: "hsl(var(--popover))",
          foreground: "hsl(var(--popover-foreground))",
        },
        card: {
          DEFAULT: "hsl(var(--card))",
          foreground: "hsl(var(--card-foreground))",
        },
      },
      borderRadius: {
        lg: '0.75rem',
        md: '0.5rem',
        sm: '0.25rem',
      },
      spacing: {
        1: '4px',
        2: '8px',
        3: '12px',
        4: '16px',
        5: '20px',
        6: '24px',
        7: '28px',
        8: '32px',
        9: '36px',
        10: '40px',
      },
      container: {
        center: true,
        padding: "2rem",
        screens: {
          "2xl": "1400px",
        },
      },
    },
  },
  plugins: [],
}
</file>

<file path="README.md">
# Emmanuel Lawal | Full Stack Developer Portfolio

A modern, responsive portfolio website showcasing my skills, projects, and professional experience as a Full Stack Developer. This portfolio highlights my expertise in frontend and backend development, UI/UX design, and demonstrates my ability to create exceptional digital experiences.


## 🚀 Live Demo

Visit my portfolio: [emmanuellawal.dev](https://webportfolio-tan.vercel.app/)

## ✨ Features

- **Modern UI/UX**: Clean, responsive design with subtle animations and micro-interactions
- **Performance-Optimized**: Fast load times and smooth performance metrics
- **Mobile-First Approach**: Fully responsive across all device sizes
- **Accessibility**: WCAG compliance for an inclusive user experience
- **Dark/Light Mode**: Theme support to accommodate user preferences
- **SEO Friendly**: Structured data and optimized metadata
- **Portfolio Showcase**: Featured projects with detailed case studies
- **Skills Visualization**: Interactive display of technical capabilities
- **Contact Integration**: Simple and effective contact methods

## 🛠️ Tech Stack

- **Framework**: [Next.js](https://nextjs.org/) with App Router
- **Language**: [TypeScript](https://www.typescriptlang.org/)
- **Styling**: [Tailwind CSS](https://tailwindcss.com/)
- **Components**: Custom UI built with [shadcn/ui](https://ui.shadcn.com/)
- **Animations**: Subtle effects with CSS and Framer Motion
- **Deployment**: GitHub Pages with GitHub Actions
- **Performance**: Optimized assets and lazy loading
- **Development**: ESLint, Prettier for code quality

## 📋 Project Structure

```
├── public/              # Static assets 
├── src/
│   ├── app/             # Next.js App Router pages
│   ├── components/      # Reusable UI components
│   │   ├── ui/          # Core UI components
│   │   └── ...          # Feature components
│   └── lib/             # Utility functions and helpers
├── .github/workflows    # GitHub Actions for deployment
└── ...                  # Configuration files
```

## 🧩 Key Sections

- **Home**: Introduction and overview of my skills and services
- **About**: My professional journey and personal background
- **Skills**: Technical capabilities and expertise areas
- **Projects**: Showcase of selected work with case studies
- **Leadership**: My approach to team collaboration and leadership
- **Vision**: Professional goals and aspirations
- **Contact**: Ways to reach me for opportunities and collaboration

## 🚀 Local Development

### Prerequisites

- Node.js (v18 or newer)
- npm or yarn

### Setup

1. Clone this repository
   ```bash
   git clone https://github.com/emmanuellawal/webportfolio.git
   cd webportfolio
   ```

2. Install dependencies
   ```bash
   npm install
   # or
   yarn install
   ```

3. Start the development server
   ```bash
   npm run dev
   # or
   yarn dev
   ```

4. Open [http://localhost:3000](http://localhost:3000) in your browser

## 📤 Deployment

This portfolio is deployed using GitHub Pages via GitHub Actions. The workflow automatically builds and deploys the site when changes are pushed to the main branch.

To deploy your own version:

1. Fork this repository
2. Enable GitHub Pages in your repository settings
3. Push changes to the main branch to trigger deployment

## 📞 Contact

Feel free to reach out if you have any questions or opportunities:

- GitHub: [github.com/emmanuellawal](https://github.com/emmanuellawal)
- LinkedIn: [linkedin.com/in/emmanuel-lawal-98519718b](https://linkedin.com/in/emmanuel-lawal-98519718b)
- Email: [emmanuellawal2024@gmail.com](mailto:emmanuellawal2024@gmail.com)

---

© 2024 Emmanuel Lawal. All rights reserved.
</file>

<file path="src/app/layout.tsx">
import type { Metadata, Viewport } from "next";
import "./globals.css";
import { IBM_Plex_Mono, Inter } from "next/font/google";
import { MainNav } from "@/components/main-nav";
import Footer from "@/components/Footer";

const inter = Inter({
  subsets: ["latin"],
  variable: "--font-sans",
  display: "swap",
});

const ibmPlexMono = IBM_Plex_Mono({
  weight: ['400', '500', '600', '700'],
  subsets: ["latin"],
  variable: "--font-mono",
  display: "swap",
});

export const metadata: Metadata = {
  title: {
    default: "Emmanuel Lawal | Full Stack Developer",
    template: "%s | Emmanuel Lawal",
  },
  description: "Full Stack Developer specializing in building exceptional digital experiences",
  authors: [{ name: "Emmanuel Lawal" }],
  keywords: ["Full Stack Developer", "Web Development", "Software Engineer", "React", "Node.js", "JavaScript", "TypeScript"],
  icons: {
    icon: [
      { url: "/celestial-gear.svg" }
    ],
    apple: [
      { url: "/celestial-gear.svg" }
    ]
  }
};

export const viewport: Viewport = {
  themeColor: [
    { media: "(prefers-color-scheme: light)", color: "#ffffff" },
    { media: "(prefers-color-scheme: dark)", color: "#111827" },
  ],
  width: "device-width",
  initialScale: 1,
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en" suppressHydrationWarning>
      <body className={`${inter.variable} ${ibmPlexMono.variable} font-sans antialiased bg-gradient-to-b from-background to-background/80 min-h-screen flex flex-col`}>
        <MainNav />
        <main className="flex-1">
          {children}
        </main>
        <Footer />
      </body>
    </html>
  );
}
</file>

<file path=".github/workflows/deploy.yml">
name: Deploy to GitHub Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main", "master"]  # Configure both main and master for flexibility

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          # Print npm and node versions for debugging
          echo "Node version: $(node -v)"
          echo "NPM version: $(npm -v)"

      - name: Setup Pages
        uses: actions/configure-pages@v4
        with:
          # Automatically inject basePath in your Next.js configuration file
          static_site_generator: next

      - name: Check Next.js config
        run: |
          echo "Content of next.config.js:"
          cat next.config.js
          
      - name: Build with Next.js
        run: |
          npm run build
          # Verify build output
          echo "Checking build output directory:"
          ls -la out/

      - name: Fix permissions
        run: |
          chmod -R a+rx out/
          echo "Fixed permissions for out directory"
          ls -la out/

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: out

  # Deployment job
  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          timeout: 600000  # 10 minutes timeout for deployment
</file>

<file path="src/app/globals.css">
@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    /* Brand Typography Variables */
    --font-sans: 'Inter', 'Open Sans', 'Nunito', system-ui, sans-serif;
    --line-height-body: 1.625;
    --tracking-heading-tight: -0.01em;

    /* Dark Modern Color Palette in HSL */
    --background: 222 47% 6%;
    --foreground: 210 40% 98%;

    --card: 222 47% 8%;
    --card-foreground: 210 40% 98%;

    --popover: 222 47% 8%;
    --popover-foreground: 210 40% 98%;

    --primary: 199 89% 48%; /* Vibrant blue */
    --primary-foreground: 0 0% 100%;

    --secondary: 293 93% 61%; /* Electric purple */
    --secondary-foreground: 0 0% 100%;

    --muted: 223 47% 11%;
    --muted-foreground: 215 20% 75%;

    --accent: 24 95% 53%; /* Energetic orange */
    --accent-foreground: 0 0% 100%;

    --destructive: 0 84% 60%;
    --destructive-foreground: 0 0% 100%;

    --border: 217 33% 15%;
    --input: 217 33% 15%;
    --ring: 199 89% 48%;

    --radius: 0.75rem;

    scroll-behavior: smooth;
    scroll-padding-top: 5rem;
  }

  * {
    @apply border-border;
  }

  /* Prevent horizontal scrolling */
  html, body {
    @apply overflow-x-hidden;
    width: 100%;
    margin: 0;
    padding: 0;
  }

  body {
    @apply font-sans bg-gradient-to-b from-background via-background/95 to-background/90 text-foreground text-base leading-relaxed min-h-screen;
    position: relative;
  }

  /* Ensure container doesn't cause overflow */
  .container {
    @apply overflow-x-hidden;
  }

  /* Modern Typography Base Styles */
  h1, h2, h3, h4, h5, h6 {
    @apply font-sans font-bold tracking-tight;
  }

  h1 { @apply text-4xl md:text-5xl lg:text-6xl mb-4; }
  h2 { @apply text-3xl md:text-4xl lg:text-5xl mb-3; }
  h3 { @apply text-2xl md:text-3xl mb-2; }
  h4 { @apply text-xl md:text-2xl mb-2; }

  p {
    @apply text-base leading-relaxed mb-4;
  }

  .supporting-text {
    @apply text-sm text-muted-foreground;
  }
}

@layer components {
  .card {
    @apply rounded-xl shadow-lg bg-card text-card-foreground p-6 mb-6 border border-white/5 backdrop-blur-sm;
  }
  .button {
    @apply rounded-lg shadow-sm font-medium px-5 py-2 transition-all hover:scale-105;
  }
}

@layer utilities {
  /* Modern Gradient Utilities */
  .bg-gradient-brand {
    @apply bg-gradient-to-r from-primary-500 via-secondary-500 to-accent-500;
  }
  
  .text-gradient-brand {
    @apply bg-clip-text text-transparent bg-gradient-to-r from-primary-500 via-secondary-500 to-accent-500;
  }

  .bg-gradient-innovation {
    @apply bg-gradient-to-r from-secondary-500 to-accent-500;
  }

  .bg-gradient-subtle {
    @apply bg-gradient-to-r from-primary-900/50 via-secondary-900/50 to-accent-900/50;
  }

  /* Glass effect utilities */
  .glass {
    @apply bg-white/5 backdrop-blur-md border-b border-white/10;
  }

  /* High-contrast text utilities for accessibility */
  .text-high-contrast {
    @apply text-neutral-50;
  }

  .text-medium-contrast {
    @apply text-neutral-300;
  }

  /* Hover effects */
  .hover-lift {
    @apply transition-all duration-300 hover:-translate-y-1 hover:shadow-lg hover:shadow-primary-500/10;
  }

  /* Glow effects */
  .glow {
    @apply shadow-lg shadow-primary-500/20;
  }

  .glow-secondary {
    @apply shadow-lg shadow-secondary-500/20;
  }

  .glow-accent {
    @apply shadow-lg shadow-accent-500/20;
  }
}

/* Scroll Animation Styles */
.scroll-animation {
  opacity: 0;
  transition: all 0.8s cubic-bezier(0.17, 0.55, 0.55, 1) 0s;
  will-change: transform, opacity;
}

.scroll-animation.animate {
  opacity: 1;
  transform: translate3d(0, 0, 0) scale(1) !important;
}

/* Different animation types */
.sa-fade-up {
  transform: translate3d(0, 30px, 0);
}

.sa-fade-in {
  opacity: 0;
}

.sa-slide-in-right {
  transform: translate3d(50px, 0, 0);
}

.sa-slide-in-left {
  transform: translate3d(-50px, 0, 0);
}

.sa-zoom-in {
  transform: scale(0.9);
}

/* Animation sequences for staggered effects */
.animate-delay-1 { transition-delay: 100ms; }
.animate-delay-2 { transition-delay: 200ms; }
.animate-delay-3 { transition-delay: 300ms; }
.animate-delay-4 { transition-delay: 400ms; }
.animate-delay-5 { transition-delay: 500ms; }
.animate-delay-6 { transition-delay: 600ms; }
.animate-delay-7 { transition-delay: 700ms; }
.animate-delay-8 { transition-delay: 800ms; }
.animate-delay-9 { transition-delay: 900ms; }
.animate-delay-10 { transition-delay: 1000ms; }
</file>

<file path="src/components/main-nav.tsx">
"use client"

import { useState } from "react"
import { 
  DropdownMenu,
  DropdownMenuContent,
  DropdownMenuItem,
  DropdownMenuLabel,
  DropdownMenuSeparator,
  DropdownMenuTrigger
} from "@/components/ui/dropdown-menu"
import { Menu, X } from "lucide-react"
import { Sheet, SheetContent, SheetHeader, SheetTitle, SheetTrigger } from "@/components/ui/sheet"
import Image from "next/image"

export function MainNav() {
  const routes = [
    { href: "#home", label: "Home" },
    { href: "#about", label: "About Me" },
    { href: "#skills", label: "Skills" },
    { href: "#projects", label: "My Playground" },
    { href: "#contact", label: "Contact" },
  ]

  const scrollToSection = (href: string) => {
    const element = document.querySelector(href);
    if (element) {
      element.scrollIntoView({ behavior: 'smooth' });
    }
  };

  return (
    <nav className="fixed top-0 left-0 right-0 z-50 glass">
      <div className="flex items-center justify-between w-full py-4 px-4 md:px-8 max-w-7xl mx-auto">
        <button 
          onClick={() => scrollToSection('#home')} 
          className="text-xl font-mono font-bold relative group flex items-center gap-2"
        >
          <div className="relative w-6 h-6">
            <Image
              src="/celestial-gear.svg"
              alt="Logo"
              width={24}
              height={24}
              className="object-contain"
            />
          </div>
          <div>
            <span className="bg-clip-text text-transparent bg-gradient-to-r from-primary-500 to-secondary-500">
              Emmanuel
            </span>
            <span className="text-accent-500">.dev</span>
            <span className="absolute -bottom-1 left-0 w-0 h-0.5 bg-gradient-to-r from-primary-500 to-secondary-500 group-hover:w-full transition-all duration-300"></span>
          </div>
        </button>
        
        {/* Desktop Navigation */}
        <div className="hidden md:flex items-center gap-8">
          {routes.map((route) => (
            <button 
              key={route.href}
              onClick={() => scrollToSection(route.href)}
              className="relative text-base font-medium group cursor-pointer"
            >
              <span className="relative z-10 transition-colors duration-300 group-hover:text-primary-500">
                {route.label}
              </span>
              <span className="absolute bottom-0 left-0 w-0 h-0.5 bg-primary-500 group-hover:w-full transition-all duration-300"></span>
            </button>
          ))}
        </div>
        
        {/* Mobile Navigation - NavDrawer */}
        <div className="md:hidden">
          <Sheet>
            <SheetTrigger asChild>
              <button 
                aria-label="Open menu" 
                className="p-2 rounded-lg border border-border/50 bg-background/50 backdrop-blur-sm shadow-sm hover:bg-primary-50 transition-colors"
              >
                <Menu className="h-6 w-6" />
              </button>
            </SheetTrigger>
            <SheetContent side="right" className="w-72 max-w-[90vw] bg-gradient-subtle backdrop-blur-md border-l border-border/50">
              <SheetHeader className="border-b border-border/50 px-6 py-4">
                <SheetTitle className="text-lg font-bold bg-clip-text text-transparent bg-gradient-to-r from-primary-500 to-secondary-500">
                  Menu
                </SheetTitle>
              </SheetHeader>
              <nav className="flex flex-col gap-2 py-6 px-6">
                {routes.map((route) => (
                  <button
                    key={route.href}
                    onClick={() => {
                      scrollToSection(route.href);
                      const sheet = document.querySelector('[data-state="open"]');
                      if (sheet) {
                        const closeButton = sheet.querySelector('button[aria-label="Close"]');
                        if (closeButton && closeButton instanceof HTMLButtonElement) {
                          closeButton.click();
                        }
                      }
                    }}
                    className="block w-full rounded-lg px-4 py-3 text-base font-medium text-left hover:bg-primary-500/10 hover:text-primary-500 transition-colors"
                  >
                    {route.label}
                  </button>
                ))}
              </nav>
            </SheetContent>
          </Sheet>
        </div>
      </div>
    </nav>
  )
}
</file>

<file path="package.json">
{
  "name": "webportfolio",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "lint": "next lint"
  },
  "dependencies": {
    "@fontsource/ibm-plex-mono": "^5.2.5",
    "@fontsource/inter": "^5.2.5",
    "@radix-ui/react-dialog": "^1.1.11",
    "@radix-ui/react-dropdown-menu": "^2.1.7",
    "@radix-ui/react-progress": "^1.1.4",
    "@radix-ui/react-slot": "^1.2.0",
    "@vercel/analytics": "^1.2.2",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "critters": "^0.0.23",
    "framer-motion": "^11.18.2",
    "lucide-react": "^0.487.0",
    "next": "^14.2.28",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-type-animation": "^3.2.0",
    "tailwind-merge": "^1.14.0",
    "tailwindcss": "^3.4.1"
  },
  "devDependencies": {
    "@types/node": "^20.11.24",
    "@types/react": "^18.2.61",
    "@types/react-dom": "^18.2.19",
    "@typescript-eslint/eslint-plugin": "^7.1.0",
    "@typescript-eslint/parser": "^7.1.0",
    "autoprefixer": "^10.4.18",
    "eslint": "^8.57.0",
    "eslint-config-next": "^14.2.28",
    "postcss": "^8.4.35",
    "typescript": "^5.3.3"
  }
}
</file>

<file path="src/app/page.tsx">
'use client';

import { Button } from "@/components/ui/button";
import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from "@/components/ui/card";
import { Github, Linkedin, Mail, ArrowRight, Code, Server, Palette, User, Phone, Globe, Brain, Sparkles, Send } from "lucide-react";
import { ScrollButton } from "@/components/ScrollButton";
import { ContactDialog } from "@/components/ContactDialog";
import { ScrollAnimation } from "@/components/ScrollAnimation";
import AvailabilitySection from "@/components/AvailabilitySection";
import Testimonials from "@/components/Testimonials";
import Image from "next/image";

export default function Home() {
  const projects = [
    {
      title: "Three Decades of Mobility",
      description: "A data visualization project exploring the relationship between vehicle registration trends and cost of living over 30 years. Analyzes how areas with different housing costs show varying patterns of vehicle ownership using economic indicators like CPI.",
      image: "/projects/ai-calc.jpg",
      tags: ["React", "D3.js", "TypeScript", "Data Visualization", "Economic Analysis"],
      liveUrl: "https://visualization-project-iota.vercel.app/",
      githubUrl: "https://github.com/emmanuellawal/visualization_Project"
    },
    {
      title: "AI-Enhanced Calculator",
      description: "A modern calculator app built with Expo and React Native, featuring natural language processing powered by OpenAI's GPT-3.5-turbo. Supports conversational calculations and unit conversions.",
      image: "/projects/data-viz.jpg",
      tags: ["React Native", "Expo", "OpenAI API", "TypeScript", "Mobile Development"],
      liveUrl: "#",
      githubUrl: "https://github.com/emmanuellawal/expo-calculator-app"
    },
    {
      title: "Cultural AI",
      description: "A platform that leverages AI to provide cultural insights and recommendations. Features cultural content recommendations, AI-powered cultural analysis, and personalized user experiences. Built with React Native frontend and Node.js/Express backend with SQL Server integration.",
      image: "/projects/cultural-ai.jpg",
      tags: ["React Native", "Node.js", "SQL Server", "OpenAI", "Docker"],
      liveUrl: "#",
      githubUrl: "https://github.com/emmanuellawal/culturalai"
    }
  ];

  return (
    <div className="min-h-screen bg-background overflow-x-hidden">
      <main className="container mx-auto space-y-32 px-4 relative">
        {/* Hero Section */}
        <section id="home" className="min-h-screen flex items-center justify-center pt-16">
          <ScrollAnimation animation="fade-up">
            <div className="text-center space-y-6 max-w-[800px] mx-auto">
              <div className="relative inline-block">
                <h1 className="text-4xl md:text-6xl font-bold bg-clip-text text-transparent bg-gradient-to-r from-primary-500 via-secondary-500 to-accent-500 pb-2 glow">
                  Emmanuel Lawal
                </h1>
                <div className="absolute bottom-0 left-0 w-full h-1 bg-gradient-to-r from-primary-500 via-secondary-500 to-accent-500 rounded-full"></div>
              </div>
              <h2 className="text-2xl md:text-3xl font-semibold bg-clip-text text-transparent bg-gradient-to-r from-primary-400 to-secondary-400">
                Full Stack Developer
              </h2>
              <p className="text-lg text-medium-contrast max-w-2xl mx-auto">
                I craft exceptional digital experiences with modern technologies, focusing on scalable and user-centric solutions.
              </p>
              <div className="flex gap-4 justify-center pt-4">
                <ScrollButton
                  targetId="#projects"
                  size="lg"
                  className="bg-gradient-to-r from-primary-500 to-secondary-500 hover:opacity-90 hover-lift glow"
                >
                  View My Work
                </ScrollButton>
                <ScrollButton
                  targetId="#contact"
                  variant="outline"
                  size="lg"
                  className="hover-lift border-primary-500/20 hover:border-primary-500 backdrop-blur-sm"
                >
                  Get in Touch
                </ScrollButton>
              </div>
              <div className="flex gap-4 justify-center pt-8">
                <a href="https://github.com/emmanuellawal" target="_blank" rel="noopener noreferrer">
                  <Button variant="ghost" size="icon" className="hover:bg-primary-500/10 hover:text-primary-500 hover-lift backdrop-blur-sm">
                    <Github className="h-5 w-5" />
                  </Button>
                </a>
                <a href="https://www.linkedin.com/in/emmanuel-lawal-98519718b/" target="_blank" rel="noopener noreferrer">
                  <Button variant="ghost" size="icon" className="hover:bg-secondary-500/10 hover:text-secondary-500 hover-lift backdrop-blur-sm">
                    <Linkedin className="h-5 w-5" />
                  </Button>
                </a>
                <a href="mailto:emmanuellawal2024@gmail.com">
                  <Button variant="ghost" size="icon" className="hover:bg-accent-500/10 hover:text-accent-500 hover-lift backdrop-blur-sm">
                    <Mail className="h-5 w-5" />
                  </Button>
                </a>
              </div>
            </div>
          </ScrollAnimation>
        </section>

        {/* About Section - Enhanced with Liking principle */}
        <section id="about" className="py-16">
          <div className="text-center space-y-12 max-w-4xl mx-auto">
            <ScrollAnimation animation="fade-up">
              <div className="space-y-4">
                <h2 className="text-3xl font-bold bg-clip-text text-transparent bg-gradient-to-r from-blue-500 to-purple-500 glow inline-block">
                  About Me
                </h2>
                <p className="text-lg text-medium-contrast">
                  Crafting the future through code and artificial intelligence.
                </p>
              </div>
            </ScrollAnimation>
            
            {/* Personal image - Adding human element to increase likability */}
            {/* 
            <ScrollAnimation animation="fade-in" delay={100}>
              <div className="relative w-48 h-48 mx-auto mb-8">
                <div className="absolute inset-0 rounded-full bg-gradient-to-br from-primary-500 to-secondary-500 blur-lg opacity-50"></div>
                <div className="relative w-full h-full rounded-full overflow-hidden border-4 border-background">
                  <Image 
                    src="/profile-photo.jpg" 
                    alt="Emmanuel Lawal" 
                    fill
                    className="object-cover"
                  />
                </div>
              </div>
            </ScrollAnimation>
            */}
            
            {/* Common ground/values - Highlighting relatable qualities */}
            <ScrollAnimation animation="fade-in" delay={200}>
              <div className="bg-card/40 backdrop-blur-sm p-5 rounded-lg border border-border/50 max-w-2xl mx-auto mb-8">
                <p className="text-medium-contrast leading-relaxed">
                  Beyond coding, I'm passionate about <span className="text-blue-500 font-medium">music production</span>, 
                  exploring the latest <span className="text-purple-500 font-medium">AI research papers</span>, and enjoying 
                  <span className="text-orange-500 font-medium"> hiking trips</span> that clear my mind for better problem-solving. 
                  I believe the best solutions come from balancing technical expertise with creative thinking.
                </p>
              </div>
            </ScrollAnimation>
            
            <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
              <ScrollAnimation animation="slide-in-left" delay={100}>
                <Card className="text-left p-6 bg-card/40 backdrop-blur-sm hover:bg-card/60 transition-all duration-300">
                  <div className="flex items-start gap-4">
                    <div className="p-3 rounded-lg bg-primary-500/10">
                      <Code className="h-6 w-6 text-primary-500" />
                    </div>
                    <div className="space-y-2">
                      <h3 className="text-xl font-semibold">Development Journey</h3>
                      <p className="text-medium-contrast">
                        As a Full Stack Developer and Information Systems student at NJIT, 
                        I've cultivated a deep understanding of both frontend and backend technologies. 
                        My approach combines technical expertise with a keen eye for user experience.
                      </p>
                    </div>
                  </div>
                </Card>
              </ScrollAnimation>

              <ScrollAnimation animation="slide-in-right" delay={200}>
                <Card className="text-left p-6 bg-card/40 backdrop-blur-sm hover:bg-card/60 transition-all duration-300">
                  <div className="flex items-start gap-4">
                    <div className="p-3 rounded-lg bg-secondary-500/10">
                      <Brain className="h-6 w-6 text-secondary-500" />
                    </div>
                    <div className="space-y-2">
                      <h3 className="text-xl font-semibold">AI Innovation & Research</h3>
                      <p className="text-medium-contrast">
                        I'm deeply passionate about artificial intelligence and its potential to transform software development. 
                        I actively integrate AI technologies into my projects, from natural language processing to intelligent automation.
                      </p>
                    </div>
                  </div>
                </Card>
              </ScrollAnimation>

              <ScrollAnimation animation="slide-in-left" delay={300}>
                <Card className="text-left p-6 bg-card/40 backdrop-blur-sm hover:bg-card/60 transition-all duration-300">
                  <div className="flex items-start gap-4">
                    <div className="p-3 rounded-lg bg-accent-500/10">
                      <Sparkles className="h-6 w-6 text-accent-500" />
                    </div>
                    <div className="space-y-2">
                      <h3 className="text-xl font-semibold">Innovation Focus</h3>
                      <p className="text-medium-contrast">
                        My goal is to push the boundaries of what's possible in web development. 
                        I'm constantly exploring new technologies and methodologies to create more 
                        intelligent and efficient solutions.
                      </p>
                    </div>
                  </div>
                </Card>
              </ScrollAnimation>

              <ScrollAnimation animation="slide-in-right" delay={400}>
                <Card className="text-left p-6 bg-card/40 backdrop-blur-sm hover:bg-card/60 transition-all duration-300">
                  <div className="flex items-start gap-4">
                    <div className="p-3 rounded-lg bg-primary-500/10">
                      <Server className="h-6 w-6 text-primary-500" />
                    </div>
                    <div className="space-y-2">
                      <h3 className="text-xl font-semibold">Technical Expertise</h3>
                      <p className="text-medium-contrast">
                        With a strong foundation in modern web technologies and AI frameworks, 
                        I specialize in creating scalable applications that leverage the power 
                        of artificial intelligence and machine learning.
                      </p>
                    </div>
                  </div>
                </Card>
              </ScrollAnimation>
            </div>

            <ScrollAnimation animation="fade-in" delay={500}>
              <div className="max-w-2xl mx-auto bg-card/40 backdrop-blur-sm rounded-lg p-6 border border-border/50">
                <p className="text-lg text-medium-contrast italic">
                  "I believe in the transformative power of combining traditional software development 
                  with artificial intelligence to create solutions that not only meet current needs 
                  but anticipate future challenges."
                </p>
              </div>
            </ScrollAnimation>
          </div>
        </section>

        {/* Skills Section */}
        <section id="skills" className="py-16">
          <ScrollAnimation animation="fade-up">
            <div className="text-center space-y-8 mb-16">
              <h2 className="text-3xl font-bold bg-clip-text text-transparent bg-gradient-to-r from-primary-500 to-secondary-500 glow inline-block">
                My Skills
              </h2>
              <p className="text-lg text-medium-contrast max-w-2xl mx-auto">
                Here are the key areas where I excel and the technologies I work with.
              </p>
            </div>
          </ScrollAnimation>
          
          <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
            <ScrollAnimation animation="fade-up" delay={100}>
              <Card className="hover-lift border-l-4 border-l-primary-500 group hover:border-l-primary-400 glow">
                <CardHeader>
                  <CardTitle className="flex items-center gap-2 group-hover:text-primary-500 transition-colors">
                    <Code className="h-5 w-5" />
                    Frontend Development
                  </CardTitle>
                  <CardDescription>Building beautiful interfaces</CardDescription>
                </CardHeader>
                <CardContent>
                  <p className="text-medium-contrast">
                    React, Next.js, TypeScript, Tailwind CSS, and modern frontend tools to create responsive and accessible web applications.
                  </p>
                </CardContent>
              </Card>
            </ScrollAnimation>

            <ScrollAnimation animation="fade-up" delay={200}>
              <Card className="hover-lift border-l-4 border-l-secondary-500 group hover:border-l-secondary-400 glow-secondary">
                <CardHeader>
                  <CardTitle className="flex items-center gap-2 group-hover:text-secondary-500 transition-colors">
                    <Server className="h-5 w-5" />
                    Backend Development
                  </CardTitle>
                  <CardDescription>Powering the applications</CardDescription>
                </CardHeader>
                <CardContent>
                  <p className="text-medium-contrast">
                    Node.js, Express, PostgreSQL, MongoDB, and RESTful APIs to build robust and scalable backend solutions.
                  </p>
                </CardContent>
              </Card>
            </ScrollAnimation>

            <ScrollAnimation animation="fade-up" delay={300}>
              <Card className="hover-lift border-l-4 border-l-accent-500 group hover:border-l-accent-400 glow-accent">
                <CardHeader>
                  <CardTitle className="flex items-center gap-2 group-hover:text-accent-500 transition-colors">
                    <Palette className="h-5 w-5" />
                    UI/UX Design
                  </CardTitle>
                  <CardDescription>Creating experiences</CardDescription>
                </CardHeader>
                <CardContent>
                  <p className="text-medium-contrast">
                    User-centered design principles, wireframing, prototyping, and modern design tools to create intuitive experiences.
                  </p>
                </CardContent>
              </Card>
            </ScrollAnimation>
          </div>
        </section>

        {/* Projects Section */}
        <section id="projects" className="py-16">
          <ScrollAnimation animation="fade-up">
            <div className="text-center space-y-8 max-w-5xl mx-auto">
              <h2 className="text-3xl font-bold bg-clip-text text-transparent bg-gradient-to-r from-primary-500 to-secondary-500 glow inline-block">
                My Playground
              </h2>
              <p className="text-lg text-medium-contrast max-w-2xl mx-auto">
                Here are some of my recent projects that showcase my skills and experience in full-stack development, 
                mobile development, and AI integration.
              </p>
            </div>
          </ScrollAnimation>
          
          <div className="grid grid-cols-1 md:grid-cols-2 gap-8 mt-12">
            {projects.map((project, index) => {
              // Determine the primary color based on the first tag
              let hueColor = "from-blue-500/20 to-purple-500/20"; // default gradient
              const firstTag = project.tags[0];
              if (firstTag.includes("React") || firstTag.includes("Next.js")) {
                hueColor = "from-blue-500/20 to-cyan-500/20";
              } else if (firstTag.includes("Type")) {
                hueColor = "from-blue-400/20 to-indigo-500/20";
              } else if (firstTag.includes("D3") || firstTag.includes("Data")) {
                hueColor = "from-green-500/20 to-emerald-500/20";
              } else if (firstTag.includes("OpenAI") || firstTag.includes("AI")) {
                hueColor = "from-purple-500/20 to-pink-500/20";
              } else if (firstTag.includes("Mobile") || firstTag.includes("Expo")) {
                hueColor = "from-orange-500/20 to-red-500/20";
              }

              return (
                <ScrollAnimation 
                  key={index} 
                  animation={index % 2 === 0 ? "slide-in-left" : "slide-in-right"}
                  delay={index * 150}
                >
                  <div className="relative group">
                    <div className={`absolute inset-0 bg-gradient-to-br ${hueColor} opacity-0 group-hover:opacity-100 transition-opacity duration-300 rounded-lg blur-xl`} />
                    <Card className="relative group overflow-hidden border-0 bg-card/80 backdrop-blur-sm transition-all duration-300 hover:bg-accent/80 hover:-translate-y-1">
                      <div className="aspect-video relative">
                        <Image
                          src={project.image}
                          alt={`Screenshot of ${project.title}`}
                          fill
                          className="object-cover transition-transform duration-300 group-hover:scale-105"
                          priority={index < 2}
                        />
                        <div className="absolute inset-0 bg-gradient-to-b from-primary/20 to-background/20 transition-opacity duration-300 group-hover:opacity-0" />
                      </div>
                      <CardHeader>
                        <CardTitle className="text-xl font-semibold">{project.title}</CardTitle>
                        <CardDescription className="text-muted-foreground">{project.description}</CardDescription>
                      </CardHeader>
                      <CardContent>
                        <div className="flex flex-wrap gap-2">
                          {project.tags.map((tag, tagIndex) => {
                            // Define color classes based on technology category
                            let colorClass = "bg-primary/10 text-primary";
                            if (tag.includes("React") || tag.includes("Next.js")) {
                              colorClass = "bg-blue-500/10 text-blue-500";
                            } else if (tag.includes("Type")) {
                              colorClass = "bg-blue-400/10 text-blue-400";
                            } else if (tag.includes("D3") || tag.includes("Data")) {
                              colorClass = "bg-green-500/10 text-green-500";
                            } else if (tag.includes("OpenAI") || tag.includes("AI")) {
                              colorClass = "bg-purple-500/10 text-purple-500";
                            } else if (tag.includes("Mobile") || tag.includes("Expo")) {
                              colorClass = "bg-orange-500/10 text-orange-500";
                            } else if (tag.includes("Economic")) {
                              colorClass = "bg-yellow-500/10 text-yellow-500";
                            } else if (tag.includes("Tailwind")) {
                              colorClass = "bg-cyan-500/10 text-cyan-500";
                            } else if (tag.includes("Vercel")) {
                              colorClass = "bg-gray-500/10 text-gray-500";
                            }
                            
                            return (
                              <span
                                key={tagIndex}
                                className={`px-3 py-1.5 text-sm font-medium rounded-full ${colorClass} transition-colors duration-200 hover:bg-opacity-20`}
                              >
                                {tag}
                              </span>
                            );
                          })}
                        </div>
                      </CardContent>
                      <CardFooter className="flex gap-4">
                        <Button asChild variant="outline" size="sm" className="transition-colors hover:bg-background/80">
                          <a href={project.liveUrl} target="_blank" rel="noopener noreferrer" className="flex items-center gap-2">
                            <Globe className="h-4 w-4" /> Live Demo
                          </a>
                        </Button>
                        <Button asChild variant="outline" size="sm" className="transition-colors hover:bg-background/80">
                          <a href={project.githubUrl} target="_blank" rel="noopener noreferrer" className="flex items-center gap-2">
                            <Github className="h-4 w-4" /> View Code
                          </a>
                        </Button>
                      </CardFooter>
                    </Card>
                  </div>
                </ScrollAnimation>
              );
            })}
          </div>
        </section>

        {/* Testimonials Section */}
        <Testimonials />
        
        {/* Availability Section - Using Scarcity principle */}
        {/* <AvailabilitySection /> */}
        
        {/* Contact Section */}
        <section id="contact" className="py-16 mb-16">
          <ScrollAnimation animation="fade-up">
            <div className="text-center space-y-12 max-w-4xl mx-auto">
              <div className="space-y-4">
                <h2 className="text-3xl font-bold bg-clip-text text-transparent bg-gradient-to-r from-primary-500 to-secondary-500 glow inline-block">
                  Let's Create Something Amazing Together
                </h2>
                <p className="text-lg text-medium-contrast">
                  Whether you have a groundbreaking project idea or want to explore AI possibilities,
                  I'm here to turn your vision into reality.
                </p>
              </div>
            </div>
          </ScrollAnimation>

          <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
            <ScrollAnimation animation="slide-in-left" delay={100}>
              <Card className="bg-card/40 backdrop-blur-sm border border-border/50 p-8 hover:bg-card/60 transition-all duration-300">
                <CardHeader>
                  <CardTitle className="flex items-center gap-2">
                    <Mail className="h-5 w-5 text-primary-500" />
                    Direct Contact
                  </CardTitle>
                  <CardDescription>
                    Reach out directly through your preferred channel
                  </CardDescription>
                </CardHeader>
                <CardContent className="space-y-4">
                  <div className="space-y-4">
                    <a 
                      href="mailto:emmanuellawal2024@gmail.com"
                      className="flex items-center gap-3 text-medium-contrast hover:text-primary-500 transition-colors p-3 rounded-lg hover:bg-primary-500/10"
                    >
                      <Mail className="h-5 w-5" />
                      <span className="text-lg">Email</span>
                    </a>
                    <a 
                      href="https://github.com/emmanuellawal"
                      target="_blank"
                      rel="noopener noreferrer"
                      className="flex items-center gap-3 text-medium-contrast hover:text-secondary-500 transition-colors p-3 rounded-lg hover:bg-secondary-500/10"
                    >
                      <Github className="h-5 w-5" />
                      <span className="text-lg">GitHub</span>
                    </a>
                    <a 
                      href="https://www.linkedin.com/in/emmanuel-lawal-98519718b/"
                      target="_blank"
                      rel="noopener noreferrer"
                      className="flex items-center gap-3 text-medium-contrast hover:text-accent-500 transition-colors p-3 rounded-lg hover:bg-accent-500/10"
                    >
                      <Linkedin className="h-5 w-5" />
                      <span className="text-lg">LinkedIn</span>
                    </a>
                  </div>
                </CardContent>
              </Card>
            </ScrollAnimation>

            <ScrollAnimation animation="slide-in-right" delay={200}>
              <Card className="bg-card/40 backdrop-blur-sm border border-border/50 p-8 hover:bg-card/60 transition-all duration-300">
                <CardHeader>
                  <CardTitle className="flex items-center gap-2">
                    <Sparkles className="h-5 w-5 text-secondary-500" />
                    Project Collaboration
                  </CardTitle>
                  <CardDescription>
                    Let's discuss your next big idea
                  </CardDescription>
                </CardHeader>
                <CardContent className="space-y-6">
                  <p className="text-medium-contrast">
                    I specialize in:
                    <ul className="list-none space-y-2 mt-2">
                      <li className="flex items-center gap-2">
                        <Brain className="h-4 w-4 text-primary-500" />
                        AI Integration & Development
                      </li>
                      <li className="flex items-center gap-2">
                        <Code className="h-4 w-4 text-secondary-500" />
                        Full Stack Web Applications
                      </li>
                      <li className="flex items-center gap-2">
                        <Server className="h-4 w-4 text-accent-500" />
                        Scalable System Architecture
                      </li>
                    </ul>
                  </p>
                  <ContactDialog>
                    <Button 
                      size="lg" 
                      className="w-full bg-gradient-to-r from-primary-500 to-secondary-500 hover:opacity-90 hover:scale-[1.02] transition-all duration-300"
                    >
                      <Send className="mr-2 h-5 w-5" />
                      Start a Conversation
                    </Button>
                  </ContactDialog>
                </CardContent>
              </Card>
            </ScrollAnimation>
          </div>

          <ScrollAnimation animation="fade-in" delay={300}>
            <Card className="bg-card/40 backdrop-blur-sm border border-border/50 p-8 mt-8">
              <div className="text-center space-y-4">
                <h3 className="text-xl font-semibold">Available for Select Projects</h3>
                <p className="text-medium-contrast max-w-2xl mx-auto">
                  Currently accepting new projects in AI development, web applications, and technical consulting. 
                  Let's discuss how we can work together to bring your ideas to life.
                </p>
              </div>
            </Card>
          </ScrollAnimation>
        </section>
      </main>
    </div>
  );
}
</file>

</files>
